# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.configuration.DynamicDeploymentMBean
derivedTypes: [
  ]
descriptionHTML: '<p>This MBean represents a WebLogic messaging bridge. A messaging
  bridge instance interoperates between separate implementations of WebLogic JMS or
  between WebLogic JMS and another messaging product.</p>  <p>For WebLogic JMS and
  third-party JMS products, a messaging bridge communicates with a configured source
  and target destinations using the resource adapters provided with WebLogic Server.</p> '
name: weblogic.management.configuration.MessagingBridgeMBean
properties:
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies if a messaging bridge instance forwards in asynchronous
    messaging mode.</p>  <p>AsyncEnabled only applies to messaging bridge instances
    whose source destination supports asynchronous receiving. Messaging bridges instances
    that forward in asynchronous mode are driven by the source destination. A messaging
    bridge instance listens for messages and forwards them as they arrive. When <code>AsyncEnabled</code>
    is not selected, a bridge instance is forced to work in synchronous mode, even
    if the source supports asynchronous receiving.</p>  <p><b>Note:</b> For a messaging
    bridge instance with a QOS of <i>Exactly-once</i> to work in asynchronous mode,
    the source destination has to support the <code>MDBTransaction</code> interface.
    Otherwise, the bridge automatically switches to synchronous mode if it detects
    that <code>MDBTransaction</code> is not supported by the source destination.</p> '
  name: AsyncEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: -1
  descriptionHTML: '<p>The maximum amount of time, in milliseconds, that a messaging
    bridge instance waits before sending a batch of messages in one transaction, regardless
    of whether the <code>Batch Size</code> has been reached or not.</p>  <ul> <li>
    <p>Only applies to a messaging bridge instance forwarding messages in synchronous
    mode and has a QOS (quality of service) that requires two-phase transactions.</p>
    </li>  <li> <p>The default value of <code>-1</code> indicates that the bridge
    instance waits until the number of messages reaches the <code>Batch Size</code>
    before it completes a transaction.</p> </li> </ul> '
  name: BatchInterval
  type: long
  writable: true
- defaultValue:
    value:
      value: 10
  descriptionHTML: '<p>The number of messages that are processed within one transaction.</p>  <p><code>Batch
    Size</code> only applies to a messaging bridge instance forwarding messages in
    synchronous mode and has a QOS (quality of service) that requires two-phase transactions.</p> '
  name: BatchSize
  type: int
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether or not the messaging bridge allows durable
    messages.</p>  <p>When enabled and the source destination is a JMS topic, a messaging
    bridge instance uses a durable subscription to ensure that no messages are lost
    in the event of a failure. <code>DurabilityEnabled</code> ignored if the source
    destination is a JMS queue.</p>  <ul> <li> <p>When enabled and the source destination
    uses durable subscriptions, the source JMS implementation saves messages that
    are sent when a messaging bridge instance is not running. When the bridge instance
    is restarted, these messages are forwarded to the target destination. The administrator
    can choose not to be durable.</p> </li>  <li> <p>When not enabled, messages that
    are sent to the source JMS implementation while the bridge instance is down cannot
    be forwarded to the target destination.</p> </li> </ul> '
  name: DurabilityEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 60
  descriptionHTML: '<p>The maximum amount of time, in seconds, that a messaging bridge
    instance remains idle.</p>  <ul> <li> <p>In <i>asynchronous</i> mode, this is
    the longest amount of time a messaging bridge instance stays idle before it checks
    the sanity of its connection to the source.</p> </li>  <li> <p>In <i>synchronous</i>
    mode, this is the amount of time the messaging bridge can block on a receive call
    if no transaction is involved.</p> </li> </ul> '
  name: IdleTimeMaximum
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies if message properties are preserved when messages
    are forwarded by a bridge instance.</p>  <p>The following message properties are
    preserved:</p>  <ul> <li> <p><code>message ID</code></p> </li>  <li> <p><code>message
    timestamp</code></p> </li>  <li> <p><code>user ID</code></p> </li>  <li> <p><code>delivery
    mode</code></p> </li>  <li> <p><code>priority</code></p> </li>  <li> <p><code>expiration
    time</code></p> </li>  <li> <p><code>redelivery limit</code></p> </li>  <li> <p><code>unit
    of order name</code></p> </li> </ul>  <p>If the target bridge destination is on
    a foreign JMS server, the following message properties are preserved:</p>  <ul>
    <li> <p><code>delivery mode</code></p> </li>  <li> <p><code>priority</code></p>
    </li>  <li> <p><code>expiration time</code></p> </li> </ul> '
  name: PreserveMsgProperty
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies if this messaging bridge instance allows the degradation
    of its QOS (quality of service) when the configured QOS is not available.</p>  <ul>
    <li> <p>When enabled, the messaging bridge instance degrades the QOS when the
    configured QOS is not available. If the QOS is degraded, a log message is delivered
    to the WebLogic startup window or log file.</p> </li>  <li> <p>When not enabled,
    if messaging bridge instance cannot satisfy the quality of service requested,
    an error results and the messaging bridge instance does not start.</p> </li> </ul> '
  name: QOSDegradationAllowed
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: Exactly-once
  descriptionHTML: '<p>The QOS (quality of service) for this messaging bridge instance.</p>  <ul>
    <li><p><code>Exactly-once</code>: Each message in the source destination is transferred
    to the target exactly once. This is the highest QOS a messaging bridge instance
    can offer.</p> </li>  <li><p><code>Atmost-once</code>: Each message in the source
    is transferred to the target only once with the possibility of being lost during
    the forwarding.</p> </li>  <li><p><code>Duplicate-okay</code>: Messages in the
    source destination are transferred to the target (none are lost) but some may
    appear in the target more than once.</p> </li> </ul> '
  legalValues:
  - Exactly-once
  - Atmost-once
  - Duplicate-okay
  name: QualityOfService
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 5
  descriptionHTML: '<p>The incremental delay time, in seconds, that a messaging bridge
    instance increases its waiting time between one failed reconnection attempt and
    the next retry.</p>  <p>Use with <code>ReconnectDelayMinimum</code> and <code>ReconnectDelayMaximum</code>.
    After the first failure to connect to a destination, the bridge instance waits
    for the number of seconds defined by <code>ReconnectDelayMinimum</code>. Each
    time a reconnect attempt fails, the bridge instance increases its waiting time
    by the number of seconds defined by <code>ReconnectDelayIncrease</code>. The maximum
    delay time is defined by <code>ReconnectDelayMaximum</code>. Once the waiting
    time is increased to the maximum value, the bridge instance stops increase its
    waiting time. Once the bridge instance successfully connects to the destination,
    the bridge instance resets its waiting time to the initial value defined by <code>ReconnectDelayMinimum</code>.</p> '
  name: ReconnectDelayIncrease
  type: int
  writable: true
- defaultValue:
    value:
      value: 60
  descriptionHTML: '<p>The longest amount of time, in seconds, that a messaging bridge
    instance waits between one failed attempt to connect to the source or target,
    and the next retry.</p>  <p>Use with <code>ReconnectDelayMinimum</code> and <code>ReconnectDelayIncrease</code>.
    After the first failure to connect to a destination, a bridge instance waits for
    the number of seconds defined by <code>ReconnectDelayMinimum</code>. Each time
    a reconnect attempt fails, the bridge instance increases its waiting time by the
    number of seconds defined by <code>ReconnectDelayIncrease</code>. The maximum
    delay time is defined by <code>ReconnectDelayMaximum</code>. Once the waiting
    time is increased to the maximum value, the bridge instance stops increase its
    waiting time. Once the bridge instance successfully connects to the destination,
    the bridge instance resets its waiting time to the initial value defined by <code>ReconnectDelayMinimum</code>.</p> '
  name: ReconnectDelayMaximum
  type: int
  writable: true
- defaultValue:
    value:
      value: 15
  descriptionHTML: '<p>The minimum amount of time, in seconds, that a messaging bridge
    instance waits before it tries to reconnect to the source or target destination
    after a failure.</p>  <p>Use with <code>ReconnectDelayMaximum</code> and <code>ReconnectDelayIncrease</code>.
    After the first failure to connect to a destination, the bridge instance waits
    for the number of seconds defined by <code>ReconnectDelayMinimum</code>. Each
    time a reconnect attempt fails, the bridge instance increases its waiting time
    by the number of seconds defined by <code>ReconnectDelayIncrease</code>. The maximum
    delay time is defined by <code>ReconnectDelayMaximum</code>. Once the waiting
    time is increased to the maximum value, the bridge instance stops increase its
    waiting time. Once the bridge instance successfully connects to the destination,
    the bridge instance resets its waiting time to the initial value defined by <code>ReconnectDelayMinimum</code>.</p>> '
  name: ReconnectDelayMinimum
  type: int
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The filter for messages that are sent across the messaging
    bridge instance.</p>  <p>Only messages that match the selection criteria are sent
    across the messaging bridge:</p>  <ul> <li> <p>For queues, messages that do not
    match the selection criteria are left behind and accumulate in the queue.</p>
    </li>  <li> <p>For topics, messages that do not match the connection criteria
    are dropped.</p> </li> </ul> '
  name: Selector
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The source destination from which this messaging bridge instance
    reads messages.</p> '
  name: SourceDestination
  relationship: reference
  restartNeeded: true
  type: weblogic.management.configuration.BridgeDestinationCommonMBean
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies the initial operating state of a targeted messaging
    bridge instance.</p>  <ul> <li> <p>If enabled, the messaging bridge instance forwards
    messages (running).</p> </li>  <li> <p>If not enabled, the messaging bridge instance
    does not forward messages (temporarily stopped).</p> </li> </ul>  <p>After a messaging
    bridge has started forwarding messages (running), use <code>Started</code> to
    temporarily suspend an active messaging bridge instance or restart an stopped
    messaging bridge instance.</p>  <ul> <li> <p>Select the <code>Started</code> checkbox
    to start a messaging bridge instance that has been temporarily stopped.</p> </li>  <li>
    <p>Clear the <code>Started</code> checkbox to temporarily stop a messaging bridge
    instance that was running.</p> </li>  <li> <p>This value does not indicate the
    run-time state of a messaging bridge instance.</p> </li> </ul> '
  name: Started
  type: boolean
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The target destination where a messaging bridge instance sends
    the messages it receives from the source destination.</p> '
  name: TargetDestination
  relationship: reference
  restartNeeded: true
  type: weblogic.management.configuration.BridgeDestinationCommonMBean
  writable: true
- defaultValue:
    value:
      value: 30
  descriptionHTML: '<p>The amount of time, in seconds, that the transaction manager
    waits for each transaction before timing it out.</p>  <ul> <li> <p>Transaction
    timeouts are used when the QOS (quality of service) for a messaging bridge instance
    requires transactions.</p> </li>  <li> <p>If a bridge is configured with <i>Exactly-once</i>
    QOS, the receiving and sending is completed in one transaction.</p> </li> </ul> '
  name: TransactionTimeout
  type: int
  writable: true
roles:
  allowed:
  - Deployer
