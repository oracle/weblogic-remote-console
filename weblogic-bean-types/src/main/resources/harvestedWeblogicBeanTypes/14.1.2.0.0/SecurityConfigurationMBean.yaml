# Copyright (c) 2020, 2024, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.configuration.ConfigurationMBean
derivedTypes: [
  ]
descriptionHTML: '<p>Provides domain-wide security configuration information.</p> '
name: weblogic.management.configuration.SecurityConfigurationMBean
properties:
- defaultValue: {
    }
  descriptionHTML: 'Domain''s administrative identity domain. '
  name: AdministrativeIdentityDomain
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  deprecated: '12.2.1.0.0 '
  descriptionHTML: '<p>Returns true if anonymous JNDI access for Admin MBean home
    is permitted. This is overridden by the Java property <code>-Dweblogic.management.anonymousAdminLookupEnabled</code>.</p> '
  name: AnonymousAdminLookupEnabled
  restartNeeded: true
  supported: false
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 60000
  descriptionHTML: 'The maximum length of time, in milliseconds, the boot process
    will wait before retrying the authentication after a login server not available
    exception. The boot process will use a backoff algorithm starting at 100 milliseconds
    increasing on each failure until the delay time reaches the MaxRetryDelay value. '
  name: BootAuthenticationMaxRetryDelay
  restartNeeded: true
  type: long
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'The maximum number of times the boot process will try to authenticate
    the boot user with the authentication providers. The authentication will be retried
    only if a failure occurs that indicates the login server is not available. '
  name: BootAuthenticationRetryCount
  restartNeeded: true
  type: int
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Determines the domain''s X509 certificate revocation checking
    configuration.</p>  <p>A CertRevocMBean is always associated with a domain''s
    security configuration and cannot be changed, although CertRevocMBean attributes
    may be changed as documented.</p> '
  name: CertRevoc
  relationship: containment
  type: weblogic.management.configuration.CertRevocMBean
- defaultValue:
    value:
      value: 30
  descriptionHTML: '<p>Returns the number of days before certificate expiration that
    warnings should be issued.</p> '
  name: CheckCertificatesExpirationDays
  type: int
  writable: true
- defaultValue:
    value:
      value: 1
  descriptionHTML: '<p>Returns the interval between checks for certificate expiration.</p> '
  name: CheckCertificatesIntervalDays
  type: int
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Returns true if identity certificates should be checked periodically
    for expiration.</p> '
  name: CheckIdentityCertificates
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Returns true if trust certificates should be checked periodically
    for expiration.</p> '
  name: CheckTrustCertificates
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Returns true if allow access to credential in clear text. This
    can be overridden by the system property <code>-Dweblogic.management.clearTextCredentialAccessEnabled</code></p> '
  name: ClearTextCredentialAccessEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether this WebLogic Server domain enables compatiblity
    with previous connection filters.</p>  <p>This attribute changes the protocols
    names used when filtering needs to be performed.</p> '
  name: CompatibilityConnectionFiltersEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The name of the Java class that implements a connection filter
    (that is, the <code>weblogic.security.net.ConnectionFilter</code> interface).
    If no class name is specified, no connection filter will be used.</p>  <p> This
    attribute replaces the deprecated ConnectionFilter attribute on the SecurityMBean.</p> '
  name: ConnectionFilter
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether the WebLogic Server should ignore filter
    rule errors during server startup.</p> '
  name: ConnectionFilterIgnoreRuleErrorsEnabled
  type: boolean
  writable: true
- array: true
  defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The rules used by any connection filter that implements the
    <code>ConnectionFilterRulesListener</code> interface. When using the default implementation
    and when no rules are specified, all connections are accepted. The default implementation
    rules are in the format: <code>target localAddress localPort action protocols</code>.</p>  <p>
    This attribute replaces the deprecated ConnectionFilterRules attribute on the
    SecurityMBean.</p> '
  name: ConnectionFilterRules
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether this WebLogic Server domain should log accepted
    connections.</p>  <p>This attribute can be used by a system administrator to dynamically
    check the incoming connections in the log file to determine if filtering needs
    to be performed.</p>  <p> This attribute replaces the deprecated ConnectionLoggerEnabled
    attribute on the SecurityMBean.</p> '
  name: ConnectionLoggerEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  deprecated: '14.1.2.0.0 '
  descriptionHTML: '<p>Indicates whether the console is enabled for fully delegate
    authorization.</p> '
  name: ConsoleFullDelegationEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The password for the domain. In WebLogic Server version 6.0,
    this attribute was the password of the system user. In WebLogic Server version
    7.0, this attribute can be any string. For the two domains to interoperate, the
    string must be the same for both domains.</p>  <p>When you set the value of this
    attribute, WebLogic Server does the following:</p> <ol><li>Encrypts the value.</li>
    <li>Sets the value of the <code>UserPasswordEncrypted</code> attribute to the
    encrypted value.</li> </ol> '
  encrypted: true
  name: Credential
  restartNeeded: true
  type: java.lang.String
  writable: true
- array: true
  defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The encrypted password for the domain. In WebLogic Server version
    6.0, this attribute was the password of the system user. In WebLogic Server version
    7.0, this attribute can be any string. For the two domains to interoperate, the
    string must be the same for both domains.</p>  <p>To set this attribute, pass
    an unencrypted string to the MBean server''s <code>setAttribute</code> method.
    WebLogic Server encrypts the value and sets the attribute to the encrypted value.</p> '
  encrypted: true
  name: CredentialEncrypted
  type: byte
  writable: true
- defaultValue:
    value:
      value: true
  deprecated: '12.2.1.0.0 '
  descriptionHTML: 'DO NOT USE THIS METHOD..... This method is only here for backward
    compatibility with old config.xml files which have been persisted and now contain
    it. '
  exclude: true
  name: CredentialGenerated
  obsolete: ' '
  restartNeeded: true
  supported: false
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Returns whether the Cross Domain Security subject cache is
    enabled.</p> '
  name: CrossDomainSecurityCacheEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 300
  descriptionHTML: '<p>Returns the time-to-live (TTL), in seconds, of the Cross Domain
    Security subject cache.  This value is used only if <code>CrossDomainSecurityCacheEnabled</code>
    is set to <code>true</code>.</p> '
  name: CrossDomainSecurityCacheTTL
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p> Indicates whether or not cross-domain security is enabled.</p> '
  name: CrossDomainSecurityEnabled
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'Returns the default security realm or null if no realm has been
    selected as the default security realm. '
  name: DefaultRealm
  relationship: reference
  restartNeeded: true
  type: weblogic.management.security.RealmMBean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: 'Whether or not to downgrade to anonymous principals that cannot
    be verified. This is useful for server-server communication between untrusted
    domains. '
  name: DowngradeUntrustedPrincipals
  type: boolean
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: 'Whether or not the system should enforce strict URL pattern or
    not. '
  name: EnforceStrictURLPattern
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: 'Whether or not the system should allow requests with invalid Basic
    Authentication credentials to access unsecure resources. '
  name: EnforceValidBasicAuthCredentials
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p> Specifies a list of remote domains for which cross-domain
    check should not be applied.</p> '
  name: ExcludedDomainNames
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: 'Returns true if all role mapping, authorization, credential mapping,
    and audit providers configured in the domain must support the IdentityDomainAwareProviderMBean
    interface''s administrative identity domain. '
  name: IdentityDomainAwareProvidersRequired
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: 'Returns true if identity domain values should be defaulted for
    the Administrative Identity Domain, Partition Primary Identity Domain, and Default
    Authenticator Identity Domain attributes. '
  exclude: true
  name: IdentityDomainDefaultEnabled
  supported: false
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'Creates a Jaspic MBean from which AuthConfigProviders can be created
    and configured. '
  name: JASPIC
  relationship: containment
  type: weblogic.management.configuration.JASPICMBean
- defaultValue: {
    }
  descriptionHTML: '<p>The password that the Administration Server uses to communicate
    with Node Manager when starting, stopping, or restarting Managed Servers. </p>  <p>When
    you get the value of this attribute, WebLogic Server does the following:</p> <ol>
    <li>Retrieves the value of the <code>NodeManagerPasswordEncrypted</code> attribute.</li>
    <li>Decrypts the value and returns the unencrypted password as a String.</li>
    </ol>  <p>When you set the value of this attribute, WebLogic Server does the following:</p>
    <ol> <li>Encrypts the value.</li> <li>Sets the value of the <code>NodeManagerPasswordEncrypted</code>
    attribute to the encrypted value.</li> </ol> <p>Using this attribute (<code>NodeManagerPassword</code>)
    is a potential security risk because the String object (which contains the unencrypted
    password) remains in the JVM''s memory until garbage collection removes it and
    the memory is reallocated. Depending on how memory is allocated in the JVM, a
    significant amount of time could pass before this unencrypted data is removed
    from memory.</p>  <p>Instead of using this attribute, you should use <code>NodeManagerPasswordEncrypted</code>.</p> '
  encrypted: true
  name: NodeManagerPassword
  restartNeeded: true
  type: java.lang.String
  writable: true
- array: true
  defaultValue:
    value:
      value: !!binary ""
  descriptionHTML: '<p>The password that the Administration Server passes to a Node
    Manager when it instructs the Node Manager to start, stop, or restart Managed
    Servers. </p>  <p>To set this attribute, use <code>weblogic.management.EncryptionHelper.encrypt()</code>
    to encrypt the value. Then set this attribute to the output of the encrypt() method.</p>  <p>To
    compare a password that a user enters with the encrypted value of this attribute,
    go to the same WebLogic Server instance that you used to set and encrypt this
    attribute and use <code>weblogic.management.EncryptionHelper.encrypt()</code>
    to encrypt the user-supplied password. Then compare the encrypted values.</p> '
  encrypted: true
  name: NodeManagerPasswordEncrypted
  type: byte
  writable: true
- defaultValue:
    value:
      value: ''
  descriptionHTML: '<p>The user name that the Administration Server uses to communicate
    with Node Manager when starting, stopping, or restarting Managed Servers. </p> '
  name: NodeManagerUsername
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 120
  descriptionHTML: 'Returns the value of the nonce timeout in seconds. '
  name: NonceTimeoutSeconds
  type: int
  writable: true
- defaultValue:
    value:
      value: '*'
  descriptionHTML: '<p>Returns a comma-separated list of hosts from which WebLogic
    Server may retrieve an object specified by a URL. This can prevent SSRF attacks
    that send a URL or IOR and expect WebLogic Server to try to resolve it. Defaults
    to ''*", meaning no restrictions.</p> '
  name: OutboundReferenceHostAllowList
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether the WebLogic Server principal name is compared
    using a case insensitive match when the equals method for the principal object
    is performed.</p>  <p>If this attribute is enabled, matches are case insensitive.</p>  <p><b>Note:</b>
    Note that principal comparison is not used by the WebLogic Security Service to
    determine access to protected resources. This attribute is intended for use with
    JAAS authorization, which may require case insensitive principal matching behavior.</p> '
  name: PrincipalEqualsCaseInsensitive
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether the GUID and DN data in a WebLogic Server
    principal object are used when the equals method of that object is invoked. </p>  <p>If
    enabled, the GUID and DN data (if included among the attributes in a WebLogic
    Server principal object) and the principal name are compared when this method
    is invoked.</p> '
  name: PrincipalEqualsCompareDnAndGuid
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Indicates which version of the default security realm MBeans
    should be loaded if none exist. The value is set to current version on initial
    read if it has not already been set.</p> '
  exclude: true
  legalValues:
  - unknown
  - '1'
  name: RealmBootStrapVersion
  obsolete: ' '
  restartNeeded: true
  supported: false
  type: java.lang.String
  writable: true
- array: true
  creators:
  - weblogic.management.security.RealmMBean
  defaultValue: {
    }
  descriptionHTML: 'Returns all the realms in the domain. '
  name: Realms
  relationship: containment
  type: weblogic.management.security.RealmMBean
- defaultValue:
    secureModeValue:
      value: false
    value:
      value: true
  descriptionHTML: '<p>Returns true if remote anonymous JNDI access is permitted for
    list and modify operations.</p> '
  name: RemoteAnonymousJNDIEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Returns true if remote anonymous RMI access via IIOP is permitted.
    If remote anonymous RMI access is not allowed, then client requests that do not
    specify a username / password may fail. </p> '
  name: RemoteAnonymousRMIIIOPEnabled
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Returns true if remote anonymous RMI access via T3 is permitted.
    If remote anonymous RMI access is not allowed, then client requests that do not
    specify a username / password may fail. </p> '
  name: RemoteAnonymousRMIT3Enabled
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'Returns the SecureMode MBean that contains attributes that control
    the behavior of Secure Mode. '
  name: SecureMode
  relationship: containment
  type: weblogic.management.configuration.SecureModeMBean
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether the WebLogic Server domain should require
    2 way TLS for admin clients. </p> '
  name: TwoWayTLSRequiredForAdminClients
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Determines whether the Demo Identity and Demo Trust key stores
    should be obtained from the Oracle Key Store Service (KSS).</p>  <p>If enabled,
    Weblogic Server will request the Demo Identity and Domain Trust key stores from
    KSS. Subsequent to installation however, the KSS Demo key stores may have been
    manipulated such that appropriate Demo certificates or keys are not available.</p>  <p>Please
    verify the following KSS Demo Identity keystore has an X.509 private key and corresponding
    public identity certificate signed by the Demo Certificate Authority (CA):</p>
    <dl> <dt>KSS Stripe</dt> <dd>system</dd> <dt>KSS Key Store</dt> <dd>demoidentity</dd>
    <dt>KSS Private Key Alias</dt> <dd>DemoIdentity</dd> </dl> <p>Please verify the
    following KSS Domain Trust keystore has a trusted Demo Certificate Authority X.509
    certificate:</p> <dl> <dt>KSS Stripe</dt> <dd>system</dd> <dt>KSS Key Store</dt>
    <dd>trust</dd> </dl> '
  name: UseKSSForDemo
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 'false'
  descriptionHTML: '<p>This property defines the case sensitive URL-pattern matching
    behavior for security constraints, servlets, filters, virtual-hosts, and so on,
    in the Web application container and external security policies.  <b>Note:</b>
    This is a Windows-only flag that is provided for backward compatibility when upgrading
    from pre-9.0 versions of WebLogic Server. On Unix platforms, setting this value
    to <code>true</code> causes undesired behavior and is not supported.  When the
    value is set to <code>os</code>, the pattern matching will be case- sensitive
    on all platforms except the Windows file system.  Note that on non-Windows file
    systems, WebLogic Server does not enforce case sensitivity and relies on the file
    system for optimization. As a result, if you have a Windows Samba mount from Unix
    or Mac OS that has been installed in case-insensitive mode, there is a chance
    of a security risk. If so, specify case-insensitive lookups by setting this attribute
    to <code>true</code>.  Note also that this property is used to preserve backward
    compatibility on Windows file systems only. In prior releases, WebLogic Server
    was case- insensitive on Windows. As of WebLogic Server 9.0, URL-pattern matching
    is strictly enforced.  During the upgrade of older domains, the value of this
    parameter is explicitly set to <code>os</code> by the upgrade plug-in to preserve
    backward compatibility.</p> '
  legalValues:
  - os
  - 'true'
  - 'false'
  name: WebAppFilesCaseInsensitive
  restartNeeded: true
  type: java.lang.String
  writable: true
