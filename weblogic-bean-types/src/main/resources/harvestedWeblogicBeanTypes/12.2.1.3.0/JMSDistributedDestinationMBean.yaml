# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

baseTypes:
- weblogic.management.configuration.JMSVirtualDestinationMBean
descriptionHTML: 'This class represents a JMS distributed destination, which is comprised
  of multiple physical JMS destinations (topics or queues) as members of a single
  distributed set of destinations that can be served by multiple WebLogic Server instances
  within a cluster. '
name: weblogic.management.configuration.JMSDistributedDestinationMBean
properties:
- creators:
  - weblogic.management.configuration.JMSTemplateMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 Replaced by weblogic.j2ee.descriptor.wl.DistributedDestinationBean '
  descriptionHTML: '<p>gets JMSTemplateMBean instance off this DistributedDestination</p> '
  exclude: true
  name: JMSTemplate
  obsolete: 9.0.0.0
  relationship: containment
  restartNeeded: true
  supported: false
  type: weblogic.management.configuration.JMSTemplateMBean
  writable: true
- defaultValue:
    value:
      value: Round-Robin
  descriptionHTML: '<p>Defines the load balancing policy for producers sending messages
    to a distributed destination in order to balance the message load across the members
    of the distributed set.</p>  <ul> <li><b>Round-Robin</b> <p>- The system maintains
    an ordering of physical topic members within the set by distributing the messaging
    load across the topic members one at a time in the order that they are defined
    in the configuration file. Each WebLogic Server maintains an identical ordering,
    but may be at a different point within the ordering. If weights are assigned to
    any of the topic members in the set, then those members appear multiple times
    in the ordering.</p> </li>  <li><b>Random</b> <p>- The weight assigned to the
    topic members is used to compute a weighted distribution for the members of the
    set. The messaging load is distributed across the topic members by pseudo-randomly
    accessing the distribution. In the short run, the load will not be directly proportional
    to the weight. In the long run, the distribution will approach the limit of the
    distribution. A pure random distribution can be achieved by setting all the weights
    to the same value, which is typically set to 1.</p> </li> </ul> '
  legalValues:
  - Round-Robin
  - Random
  name: LoadBalancingPolicy
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The JMS template from which the distributed destination is
    derived.</p> '
  name: Template
  relationship: reference
  restartNeeded: true
  supported: false
  type: weblogic.management.configuration.JMSTemplateMBean
  writable: true
roles:
  allowed:
  - Deployer
