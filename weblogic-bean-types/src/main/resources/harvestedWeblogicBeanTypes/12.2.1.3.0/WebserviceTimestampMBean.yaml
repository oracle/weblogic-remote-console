# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.configuration.ConfigurationMBean
derivedTypes: [
  ]
descriptionHTML: '<p>Encapsulates the timestamp information that is associated with
  a Web Service security configuration.</p> '
name: weblogic.management.configuration.WebserviceTimestampMBean
properties:
- defaultValue:
    value:
      value: 60000
  descriptionHTML: '<p>If clocks are synchronized, this attribute describes the accuracy
    of the synchronization between two clocks: the client and the server.</p>  <p>ClockSkew
    is expressed in milliseconds. Clock skew is enforced by rendering all times into
    milliseconds since a common time 0 and using these times for comparisons. For
    example, if your clocks are accurate to within 1 minute of each other, you would
    set your skew to 1 minute * 60 seconds * 1000 milliseconds or 60000. </p> '
  name: ClockSkew
  type: long
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether the Web Service assumes synchronized clocks.</p>  <p>If
    the clockSynchronized attribute is false, the Web Service rejects all inbound
    messages with that contain expirations, because this is the only safe way to ensure
    that the message hasn''t already expired. In this case, the Web Service also does
    not enforce a freshness policy.</p>  <p>If this attribute is set to true, then
    the Web Service enforces expirations on inbound messages to the best of its ability
    and enforces an optional freshness policy (via maxProcessingDelay).</p>  <p>The
    default value of this attribute is true.</p> '
  name: ClockSynchronized
  type: boolean
  writable: true
- defaultValue:
    value:
      value: -1
  descriptionHTML: '<p>Specifies the freshness policy for received messages: the Web
    Service observes the processing delay by subtracting the Created time in the Timestamp
    from the current time.</p>  <p>If the observed processing delay is greater than
    maxProcessingDelay plus clockSkew, then the message is  rejected as stale.</p>  <p>This
    attribute is specified in milliseconds.</p>  <p>Setting maxProcessingDelay to
    NO_MAX_PROCESSING_DELAY disables to enforcement of the freshness policy.</p> '
  name: MaxProcessingDelay
  type: long
  writable: true
- defaultValue:
    value:
      value: 60
  descriptionHTML: '<p>Represents the length of time the sender wants the outbound
    message to be valid. </p>  <p>When the validityPeriod is positive, the TimestampHandler
    inserts an Expires element into the Timestamp header.   The validityPeriod is
    expressed in seconds:  the Expires time will be that many seconds ahead of the
    Timestamp''s Created time.</p> '
  name: ValidityPeriod
  type: int
  writable: true
