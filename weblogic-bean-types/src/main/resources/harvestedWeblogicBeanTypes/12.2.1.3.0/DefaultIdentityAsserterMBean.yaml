# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.security.authentication.IdentityAsserterMBean
- weblogic.management.security.authentication.IdentityDomainAuthenticatorMBean
derivedTypes: [
  ]
descriptionHTML: '<p>The MBean that represents configuration atrributes for the WebLogic       Identity
  Assertion provider. The WebLogic Identity Assertion provider       supports identity
  assertion using X.509 certificates and CORBA Common       Secure Interoperability
  version 2 (CS1 v2). The class also contains       attributes for the default user
  name mapping class plus the list of       trusted client principals.</p> '
name: weblogic.security.providers.authentication.DefaultIdentityAsserterMBean
properties:
- array: true
  defaultValue:
    value:
      value:
      - AuthenticatedUser
      - weblogic-jwt-token
  descriptionHTML: 'No description provided. '
  name: ActiveTypes
  restartNeeded: true
  type: java.lang.String
  writable: true
- array: true
  defaultValue:
    value:
      value:
      - weblogic-jwt-token
  descriptionHTML: '<p>The list of token types mean the tokens are not needed to be
    Base64 decoded as others.</p> '
  name: BASE64EncodingExceptions
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: '@'
  descriptionHTML: '<p>The delimiter that ends the attribute value when mapping from
    the         X.509 certificate or X.500 name token to the WebLogic user name.</p> '
  name: DefaultUserNameMapperAttributeDelimiter
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: E
  descriptionHTML: '<p>The name of the attribute from the subject DN to use when mapping         from
    the X.509 certificate or X.500 name token to the WebLogic user         name.</p> '
  legalValues:
  - C
  - CN
  - E
  - L
  - O
  - OU
  - S
  - STREET
  name: DefaultUserNameMapperAttributeType
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: WebLogic Identity Assertion provider
  descriptionHTML: '<p>A short description of the Identity Assertion provider.</p> '
  name: Description
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>The name of the data source to use for storage digest values.
    These         digest values are used to detect replay attacks.</p> '
  name: DigestDataSourceName
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 300
  descriptionHTML: '<p>Determines how long digests are valid. </p><p>A digest that
    was created before the specified time will not be         valid. This setting
    impacts how long previous digest values must be         stored in the database
    for use in detecting replay attacks.</p> '
  name: DigestExpirationTimePeriod
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Enables the storage of the digest nonce values used to detect         replay
    attacks. </p><p>If this setting is enabled, you must configure a data source to         store
    the nonces for the specified expiration period. WebLogic Server         then stores
    all the nonces from digest authentication attempts for all         the machines
    in the domain. On each digest authentication attempt, the         nonce is validated
    against the stored nonces. If the nonce is present,         a replay attack has
    occurred and the digest authentication attempt         fails.</p> '
  name: DigestReplayDetectionEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: DefaultIdentityAsserter
  descriptionHTML: ' '
  name: Name
  type: java.lang.String
- defaultValue:
    value:
      value: weblogic.security.providers.authentication.DefaultIdentityAsserterProviderImpl
  descriptionHTML: '<p>The name of the Java class used to load the Identity Assertion         provider.</p> '
  name: ProviderClassName
  type: java.lang.String
- array: true
  defaultValue:
    value:
      value:
      - AuthenticatedUser
      - weblogic-jwt-token
      - X.509
      - CSI.PrincipalName
      - CSI.ITTAnonymous
      - CSI.X509CertChain
      - CSI.DistinguishedName
      - wsse:PasswordDigest
  descriptionHTML: '<p>The token types supported by the Identity Assertion provider.</p> '
  name: SupportedTypes
  type: java.lang.String
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>The list of trusted client principals to use in CSI v2 identity         assertion.
    </p><p>The wildcard character (*) can be used to specify all principals         are
    trusted. If a client is not listed as a trusted client principal,         the
    CSIv2 identity assertion fails and the invoke is rejected.</p> '
  name: TrustedClientPrincipals
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Uses the user name mapping class provided by WebLogic Server.
    The         default user name mapping class only validates that a certificate
    has         not expired. </p><p>If you require additional validation, you need
    to write your own         user name mapping class. Writing your own user name
    mapping class also         allows you to specify what attribute in the subject
    DN of the         certificate is used to map to the user name.</p> '
  name: UseDefaultUserNameMapper
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The name of the Java class that maps X.509 digital certificates
    and         X.501 distinguished names to WebLogic user names.</p> '
  name: UserNameMapperClassName
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: '1.0'
  descriptionHTML: '<p>The version number of the Identity Assertion provider.</p> '
  name: Version
  type: java.lang.String
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Determines whether to authenticate Weblogic Server users accessing
    via identity assertion,            which are not represented in the security store.</p><p>If
    this setting is enabled, Weblogic Server users not represented in the security
    store, will be authenticated.            Note that in addition to this attribute,
    Subject Component mapper classes, which are a type of user name mapper,            may
    disallow virtual users based on the token.</p> '
  name: VirtualUserAllowed
  type: boolean
  writable: true
