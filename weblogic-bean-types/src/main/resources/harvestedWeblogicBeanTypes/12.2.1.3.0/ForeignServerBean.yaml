# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.j2ee.descriptor.wl.TargetableBean
derivedTypes: [
  ]
descriptionHTML: 'This bean represents foreign resources. '
name: weblogic.j2ee.descriptor.wl.ForeignServerBean
properties:
- defaultValue: {
    }
  descriptionHTML: '<p>The URL that WebLogic Server will use to contact the JNDI provider.
    The syntax of this URL depends on which JNDI provider is being used. For WebLogic
    JMS, leave this field blank if you are referencing WebLogic JMS objects within
    the same cluster.</p>  <p>This value corresponds to the standard JNDI property,
    <code>java.naming.provider.url</code>.</p>  <p><i>Note:</i> If this value is not
    specified, look-ups will be performed on the JNDI server within the WebLogic Server
    instance where this connection factory is deployed.</p> '
  name: ConnectionURL
  nullable: true
  redeployNeeded: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- array: true
  creators:
  - weblogic.j2ee.descriptor.wl.ForeignConnectionFactoryBean
  defaultValue: {
    }
  descriptionHTML: 'Gets an array of all foreign connection factories associated with
    this foreign server. '
  name: ForeignConnectionFactories
  relationship: containment
  type: weblogic.j2ee.descriptor.wl.ForeignConnectionFactoryBean
- array: true
  creators:
  - weblogic.j2ee.descriptor.wl.ForeignDestinationBean
  defaultValue: {
    }
  descriptionHTML: 'Gets an array of all foreign destinations associated with this
    foreign server. '
  name: ForeignDestinations
  relationship: containment
  type: weblogic.j2ee.descriptor.wl.ForeignDestinationBean
- defaultValue:
    value:
      value: weblogic.jndi.WLInitialContextFactory
  descriptionHTML: '<p>The name of the class that must be instantiated to access the
    JNDI provider. This class name depends on the JNDI provider and the vendor that
    are being used.</p>  <p>This value corresponds to the standard JNDI property,
    <code>java.naming.factory.initial</code>.</p>  <p><i>Note:</i> This value defaults
    to <code>weblogic.jndi.WLInitialContextFactory</code>, which is the correct value
    for WebLogic Server.</p> '
  name: InitialContextFactory
  type: java.lang.String
  writable: true
- array: true
  creators:
  - weblogic.j2ee.descriptor.wl.PropertyBean
  defaultValue: {
    }
  descriptionHTML: '<p>Any additional properties that must be set for the JNDI provider.
    These properties will be passed directly to the constructor for the JNDI provider''s
    InitialContext class.</p>  <p>Some foreign providers require other properties
    to be set while obtaining an initial naming context. These properties can be set
    with a property bean </p> '
  name: JNDIProperties
  relationship: containment
  type: weblogic.j2ee.descriptor.wl.PropertyBean
- defaultValue: {
    }
  descriptionHTML: '<p>Any Credentials that must be set for the JNDI provider. These
    Credentials will be part of the properties will be passed directly to the constructor
    for the JNDI provider''s InitialContext class.</p>  <p>Some foreign providers
    require other properties to be set while obtaining an initial naming context.
    These properties can be set with a property bean </p> '
  encrypted: true
  name: JNDIPropertiesCredential
  type: java.lang.String
  writable: true
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p> This should not be called by anyone.  It''s required when
    using the encrypted tag '
  encrypted: true
  name: JNDIPropertiesCredentialEncrypted
  type: byte
  writable: true
roles:
  allowed:
  - Deployer
