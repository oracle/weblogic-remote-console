# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.configuration.ConfigurationMBean
derivedTypes: [
  ]
descriptionHTML: '<p>An Entity Spec Entry specifies how to resolve an external entity
  based its public and system IDs.</p>  <p>When WebLogic Server is parsing an XML
  document and it encounters the specified external entity, WebLogic Server resolves
  the entity according to the values entered for this entry.  You can specify that
  the external entity resolve to a particular resource whose location is either a
  pathname reachable by the Administration Server or a URI to a local repository.</p>  <p>An
  Entity Spec entry is part of an XML Registry.</p>  <p>For this type of registry
  entry the document type is identified by either or both of:</p>  <ul> <li>a public
  ID (e.g, "-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN"</li> <li>a
  system ID (e.g, "http://java.sun.com/j2ee/dtds/ejb-jar_2_0.dtd")</li> </ul>  <p>This
  configuration information is used by the WebLogic JAXP implementation to set up
  SAX EntityResolvers.</p> '
name: weblogic.management.configuration.XMLEntitySpecRegistryEntryMBean
properties:
- defaultValue:
    value:
      value: -1
  descriptionHTML: '<p>Specifies the default timeout interval (in seconds) of the
    external entity cache.</p>  <p>A value of <code>-1</code> means that the entity
    cache timeout interval defers to the one specified for the XML registry of which
    this Entity Spec entry is a part.</p> '
  name: CacheTimeoutInterval
  type: int
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The location of the external entity, either a pathname or URI.</p>  <p>The
    location of the external entity can be either a pathname relative to the XML Registry
    directories, reachable by the Administration Server, or a URI of the entity location
    in some local repository.</p> '
  name: EntityURI
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: defer-to-registry-setting
  descriptionHTML: '<p>Whether cached DTD/schema is invalidated when parsing error
    is encountered.</p> '
  legalValues:
  - 'true'
  - 'false'
  - defer-to-registry-setting
  name: HandleEntityInvalidation
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The public ID of the external entity.</p>  <p>When WebLogic
    Server is parsing an XML document and it encounters an external entity with this
    public ID, WebLogic Server resolves the entity (to either a local file or a URL
    resource) according to the values set for this Entity spec entry.</p> '
  name: PublicId
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The system ID of the external entity.</p>  <p>When WebLogic
    Server is parsing an XML document and it encounters an external entity with this
    system ID, WebLogic Server resolves the entity (to either a local file or a URL
    resource) according to the values set for this Entity spec entry.</p> '
  name: SystemId
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: defer-to-registry-setting
  descriptionHTML: '<p>Specifies when WebLogic Server should cache the external entities
    it retrieves from the Web.</p>  <p>WebLogic Server can cache the entities when
    they are referenced, as soon as possible (that is, on initialization) or never.
    Additionally, WebLogic Server can defer to the XML registry''s cache setting.</p> '
  legalValues:
  - cache-on-reference
  - cache-at-initialization
  - cache-never
  - defer-to-registry-setting
  name: WhenToCache
  type: java.lang.String
  writable: true
