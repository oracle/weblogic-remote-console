# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.runtime.ReplicationRuntimeMBean
derivedTypes: [
  ]
descriptionHTML: 'This class is used for monitoring a server''s view of the members
  of a WebLogic cluster within a WebLogic domain. '
name: weblogic.management.runtime.ClusterRuntimeMBean
properties:
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>Returns an array of the names of the singleton services that
    are active on this server.</p> '
  name: ActiveSingletonServices
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Provides the current total number of alive servers in this
    cluster.</p>  <p>Returns the current total number of alive servers in this cluster.</p> '
  name: AliveServerCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>Provides the current MachineMBean of the server. In most cases
    this is the MachineMBean that the server is configured to run on. The only time
    when this will not be true is if auto-migration is enabled. This method will report
    the current host machine for the server, in that case. '
  excludeFromRest: REST does not support references from server runtime mbeans to
    config mbeans when delegating from the admin server to a managed server
  name: CurrentMachine
  relationship: reference
  supported: false
  type: weblogic.management.configuration.MachineMBean
- defaultValue: {
    }
  deprecated: '10.3.0.0. deprecated in favor of getSecondaryServerDetails '
  descriptionHTML: ' '
  name: CurrentSecondaryServer
  supported: false
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Provides the number of fragments that originated in foreign
    domains or clusters which use the same multicast address.</p>  <p>Answer the number
    of fragments that originated in foreign domains/cluster that use the same multicast
    address.</p> '
  name: ForeignFragmentsDroppedCount
  type: long
- defaultValue: {
    }
  descriptionHTML: '<p>Provides the total number of messages received on this server
    from the cluster. This is applicable to both multicast and unicast message types.</p> '
  name: FragmentsReceivedCount
  type: long
- defaultValue: {
    }
  descriptionHTML: '<p>Returns the total number of message fragments sent from this
    server into the cluster. This is applicable to both multicast and unicast message
    types.</p> '
  name: FragmentsSentCount
  type: long
- defaultValue: {
    }
  descriptionHTML: '<p>Provides health information returned by the server self-health
    monitor service.</p> <ul> <li>HEALTH_OK = 0, Server service is healthy.</li>  <li>HEALTH_WARN
    = 1, Service could have problems in the future. Check the server logs and the
    corresponding RuntimeMBean for more details.</li>  <li>HEALTH_CRITICAL = 2, Something
    must be done now to prevent service failure. Check the server logs and the corresponding
    RuntimeMBean for more details.</li>  <li>HEALTH_FAILED = 3, Service has failed
    - must be restarted. Check the server logs and the corresponding RuntimeMBean
    for more details.</li>  <li>HEALTH_OVERLOADED = 4, Service is functioning normally
    but there is too much work in it. CRITICAL and OVERLOADED are different. A subsystem
    is in the critical state when a part of it is malfunctioning, for example, stuck
    threads. An overloaded state means that there is more work assigned to the service
    than the configured threshold. A service might refuse more work in this state.</li>  <li>LOW_MEMORY_REASON
    = "server is low on memory", Reason code that indicates that the server is low
    on memory. Administrators can configure low and high thresholds for memory usage.
    The server health changes to <code>OVERLOADED</code> with this reason code if
    the low threshold is reached. </li></ul> '
  name: HealthState
  type: weblogic.health.HealthState
- defaultValue: {
    }
  descriptionHTML: '<p>Provides information about past jobs executed on this server.
    Jobs must have been submitted to the Job Scheduler and should have been executed
    at least once on this server.</p> '
  name: JobSchedulerRuntime
  relationship: containment
  type: weblogic.management.runtime.JobSchedulerRuntimeMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Provides the total number of in-coming multicast messages that
    were lost according to this server.</p> '
  name: MulticastMessagesLostCount
  type: long
- defaultValue: {
    }
  descriptionHTML: '<p>Provides the number of state-delta messages that had to be
    resent because a receiving server in the cluster missed a message.</p>  <p>Returns
    the number of state-delta messages that had to be resent because a receiving server
    in the cluster missed a message.</p> '
  name: ResendRequestsCount
  type: long
- array: true
  defaultValue: {
    }
  deprecated: '10.3.0.0 deprecated in favor of getDetailedSecondariesDistribution '
  descriptionHTML: '<p>Provides the names of the remote servers (such as myserver)
    for which the local server is hosting secondary objects. The name is appended
    with a number to indicate the number of secondaries hosted on behalf of that server.</p> '
  name: SecondaryDistributionNames
  supported: false
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Provides information about server migrations performed by this
    server. If the current server is not responsible for migrations, it points to
    the server that is responsible for them.</p> '
  name: ServerMigrationRuntime
  relationship: containment
  type: weblogic.management.runtime.ServerMigrationRuntimeMBean
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>Provides the names of the servers in the cluster.</p> '
  name: ServerNames
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Provides information about unicast messaging mode if enabled.</p> '
  name: UnicastMessaging
  relationship: containment
  type: weblogic.management.runtime.UnicastMessagingRuntimeMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Provides a HashMap of the servers that, from this server''s
    perspective, have dropped out of the cluster at some point during this server''s
    current lifetime. The key is the server name, and the value is an Integer of the
    number of times the server has disconnected.</p>  <p> This view may not be consistent
    with the views of other servers. Servers that have never disconnected will not
    be in the HashMap. The view is not maintained across server restarts. No distinction
    is made between the possible causes of the disconnect; proper shutdowns cause
    the disconnect count to go up just like a network outage or a crash would.</p> '
  exclude: true
  name: UnreliableServers
  supported: false
  type: java.util.HashMap
