# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.runtime.RuntimeMBean
derivedTypes: [
  ]
descriptionHTML: '<p>This interface defines various methods for accessing runtime
  information about the diagnostic instrumentation system.</p> '
name: weblogic.management.runtime.WLDFInstrumentationRuntimeMBean
properties:
- defaultValue: {
    }
  descriptionHTML: '<p>The number of affected CALL joinpoints for all classes that
    were inspected. (CALL joinpoints are on the caller side.)</p> '
  name: CallJoinpointCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>Number of classes for which the class weaving aborted with
    some exceptional situation.</p> '
  name: ClassweaveAbortCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>The number of affected EXECUTION joinpoints for all classes
    that were inspected. (EXECUTION joinpoints are on the callee side.)</p> '
  name: ExecutionJoinpointCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>The number of classes inspected for weaving (weaving is the
    insertion of diagnostic code).</p> '
  name: InspectedClassesCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>For all classes, the weaving time in nanoseconds for the class
    that required the most time to process (includes the time spent both for inspection
    and for modification).</p> '
  name: MaxWeavingTime
  type: long
- defaultValue: {
    }
  descriptionHTML: '<p>Map containing the method invocation statistics for this scope.
    It is a nested Map structure. The first level Map is keyed by the fully qualified
    class names within the instrumentation scope. It yields another Map containing
    the method data within an instrumented class. The method data Map is keyed by
    the method name and it yields another Map structure that is keyed by the method
    signatures. Method signature key is represented by a comma separated list of the
    input parameters. Each method signature key''s value is the ultimate statistics
    Map object that contains entries with predefined keys: count, min, max, avg, sum,
    sum_of_squares, and std_deviation. The value for these keys indicate the associated
    metric.</p>  <p>When specifying this attribute as part of a variable within a
    WLDF policy expression, you must explicitly declare the WLDFInstrumentationRuntime
    type. Otherwise, the system can''t determine the type when validating the attribute
    expression, and the expression won''t work.</p> '
  excludeFromRest: No default REST mapping for Map
  name: MethodInvocationStatistics
  supported: false
  type: java.util.Map
- defaultValue: {
    }
  descriptionHTML: '<p>Map containing the method memory allocation statistics for
    this scope. It is a nested Map structure. The first level Map is keyed by the
    fully qualified class names within the instrumentation scope. It yields another
    Map containing the method data within an instrumented class. The method data Map
    is keyed by the method name and it yields another Map structure that is keyed
    by the method signatures. Method signature key is represented by a comma separated
    list of the input parameters. Each method signature key''s value is the ultimate
    statistics Map object that contains entries with predefined keys: count, min,
    max, avg, sum, sum_of_squares, and std_deviation. The value for these keys indicate
    the associated metric.</p>  <p>When specifying this attribute as part of a variable
    within a WLDF policy expression, you must explicitly declare the WLDFInstrumentationRuntime
    type. Otherwise, the system can''t determine the type when validating the attribute
    expression, and the expression won''t work.</p> '
  excludeFromRest: No default REST mapping for Map
  name: MethodMemoryAllocationStatistics
  supported: false
  type: java.util.Map
- defaultValue: {
    }
  descriptionHTML: '<p>For all classes, the weaving time in nanoseconds for the class
    that required the least time to process (includes the time spent both for inspection
    and for modification).</p> '
  name: MinWeavingTime
  type: long
- defaultValue: {
    }
  descriptionHTML: '<p>The number of modified classes (classes where diagnostic code
    has been inserted).</p> '
  name: ModifiedClassesCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>For all classes, the total weaving time in nanoseconds for
    processing (includes the time spent both for inspection and for modification).</p> '
  name: TotalWeavingTime
  type: long
