# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

baseTypes:
- weblogic.management.configuration.TargetMBean
descriptionHTML: '<p>This bean represents a cluster in the domain. Servers join a
  cluster by calling ServerMBean.setCluster with the logical name of the cluster.
  A configuration may define zero or more clusters. They may be looked up by logical
  name.</p>  <p>The name of a cluster denotes its logical cluster name.</p> '
name: weblogic.management.configuration.ClusterMBean
properties:
- defaultValue:
    value:
      value: 3
  descriptionHTML: '<p>A migratable server could fail to come up on every possible
    configured machine. This attribute controls how many further attempts, after the
    first one, should be tried.</p>  <p>Note that each attempt specified here indicates
    another full circuit of migrations amongst all the configured machines. So for
    a 3-server cluster, and the default value of 3, a total of 9 migrations will be
    attempted.</p>  <p>If it is set to -1, migrations will go on forever until the
    server starts.</p> '
  name: AdditionalAutoMigrationAttempts
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 30
  descriptionHTML: '<p>Interval in seconds until the producer thread will wait for
    the AsyncSessionQueue to become unblocked.  Should be similar to the RequestTimeOut
    as that will determine the longest that the queue should remain full.</p> '
  name: AsyncSessionQueueTimeout
  type: int
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The absolute file path of a custom DDL file for creating the
    automatic migration database table.</p>  <p>This setting applies only if the <code>MigrationBasis</code>
    attribute is set to <code>database</code>, the <code>AutoMigrationTableCreationPolicy</code>
    attribute is set to <code>Always</code>, and the table name specified by the <code>AutoMigrationTableName</code>
    attribute does not already exist in the database.</p>  <p>If the above conditions
    apply, and this setting is set to the default, then the system will try to find
    a default DDL file for the creating the leasing database table in <code>WL_HOME/server/db/DB_TYPE/leasing.ddl</code>.</p>  <p>Note
    that the system ignores (skips) any <code>DROP</code> commands in the DDL file,
    and substitutes the value configured in the <code>AutoMigrationTableName</code>
    attribute for all occurrences of the word <code>ACTIVE</code> in the file.</p> '
  name: AutoMigrationTableCreationDDLFile
  nullable: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: Disabled
  descriptionHTML: '<p>Control automatic leasing table creation behavior.</p>  <p>This
    setting applies only if the <code>MigrationBasis</code> attribute is set to <code>database</code>.</p>  <ul>
    <li><code>Disabled</code> <p>Disables automatic leasing table creation. The behavior
    is same as manual table creation. Any singletons dependent on cluster leasing
    will fail to start unless the table defined by the <code>AutoMigrationTableName</code>
    already exists in the database.</p> </li>  <li><code>Always</code> <p>Force automatic
    leasing table creation if the table is not found. The default table name is "ACTIVE"
    and can be customized using the <code>AutoMigrationTableName</code> attribute.
    The SQL used to create the table when it is not found can be customized using
    the <code>AutoMigrationTableCreationDDLFile</code> attribute.</p> </li> </ul> '
  legalValues:
  - Disabled
  - Always
  name: AutoMigrationTableCreationPolicy
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: ACTIVE
  descriptionHTML: '<p>Return the name of the table to be used for server migration.</p>  <p>This
    setting applies only if the <code>MigrationBasis</code> attribute is set to <code>database</code>.</p>  <p>If
    the <code>AutoMigrationTableCreationPolicy</code> is set to <code>Always</code>,
    then the table name format must be specified in the form <code>[[[mycatalog.]myschema.]mytablename</code>;
    for example <code>myschema.mytablename</code>.  Each period symbol format is significant,
    where schema generally corresponds to username in many databases.</p>  <p>When
    no table name is specified, the table name is simply <code>ACTIVE</code> and the
    database implicitly determines the schema according to the JDBC data source user.</p> '
  name: AutoMigrationTableName
  restartNeeded: true
  type: java.lang.String
  writable: true
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>The set of machines (and order of preference) on which Node
    Manager will restart failed servers. (Requires you to enable each server for automatic
    migration.)</p>  <p>Each server can specify a subset of these cluster-wide candidates,
    which limits the machines on which the server can be restarted. Servers can also
    specify their own order of preference.</p> '
  name: CandidateMachinesForMigratableServers
  relationship: reference
  restartNeeded: true
  type: weblogic.management.configuration.MachineMBean
  writable: true
- defaultValue:
    secureModeValue:
      value: false
    value:
      value: false
  descriptionHTML: '<p>Specifies whether to honor the WL-Proxy-Client-Cert header
    coming with the request or not. </p> '
  name: ClientCertProxyEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The address that forms a portion of the URL a client uses to
    connect to this cluster, and that is used for generating EJB handles and entity
    EJB failover addresses. (This address may be either a DNS host name that maps
    to multiple IP addresses or a comma-separated list of single address host names
    or IP addresses.)</p>  <p>Defines the address to be used by clients to connect
    to this cluster. This address may be either a DNS host name that maps to multiple
    IP addresses or a comma separated list of single address host names or IP addresses.
    If network channels are configured, it is possible to set the cluster address
    on a per channel basis.</p> '
  name: ClusterAddress
  redeployNeeded: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Specifies the channel used to handle communications within
    a cluster. If no channel is specified the default channel is used.</p> <p>ClusterBroadcastChannel
    is only are supported if the unicast messaging type is used.</p> '
  name: ClusterBroadcastChannel
  redeployNeeded: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: unicast
  descriptionHTML: '<p>Specifies the messaging type used in the cluster.</p> <p>Multicast
    messaging is provided for backwards compatibility.</p> '
  legalValues:
  - multicast
  - unicast
  name: ClusterMessagingMode
  redeployNeeded: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: none
  descriptionHTML: '<p>Optimizes cross-cluster replication for the type of network
    that servers in the clusters use for administrative communication.</p>  <p>To
    enhance the reliability of HTTP sessions, you can configure servers in one cluster
    to replicate the session data to servers in a different cluster. In such an environment,
    configure the clusters to be one of the following types:</p>  <ul> <li><code>man</code>
    <p>If the clustered servers can send their data through a metro area network (man)
    in which latency is negligible. With this ClusterType value, servers replicate
    session state synchronously and in memory only. For example, when serverA in cluster1
    starts an HTTP session, its backup server, serverB in cluster2, immediately replicates
    this session in memory to Server B.</p> </li>  <li><code>wan</code> <p>If the
    clusters are far apart or send their data through a wide area network (wan) that
    experiences significant network latency. With this ClusterType value, a server
    replicates session state synchronously to the backup server in the same cluster
    and asynchronously to a server in the remote cluster. For example, when serverA
    in cluster1 starts an HTTP session, it sends the data to serverB in cluster1 and
    then asynchronously sends data to serverX in cluster 2. ServerX will persist the
    session state in the database.</p>  <p>If you persist session data in a replicating
    database, and if you prefer to use the database to replicate the data instead
    of WebLogic Server, choose a cluster type of <code>wan</code> and leave the remote
    cluster address undefined. WebLogic Server saves the session data to the local
    database and assumes that the database replicates data as needed.</p> </li> </ul> '
  legalValues:
  - none
  - wan
  - man
  name: ClusterType
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'Coherence Cluster associated with this cluster. '
  name: CoherenceClusterSystemResource
  relationship: reference
  restartNeeded: true
  type: weblogic.management.configuration.CoherenceClusterSystemResourceMBean
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'Coherence Tier associated with this WLS cluster. '
  name: CoherenceTier
  relationship: containment
  type: weblogic.management.configuration.CoherenceTierMBean
- defaultValue:
    value:
      value: false
  descriptionHTML: 'Specifies whether to allow the concurrent activation, deactivation,
    or restart of two or more singleton services. '
  name: ConcurrentSingletonActivationEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Controls the number of cluster participants in determining
    consensus.</p> '
  exclude: true
  name: ConsensusParticipants
  redeployNeeded: true
  restartNeeded: true
  supported: false
  type: int
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The data source used by servers in the cluster during migration.
    (You must configure each Migratable Server within the cluster to use this data
    source.)</p>  <p>This setting applies only if the <code>MigrationBasis</code>
    attribute is set to <code>database</code>.</p> '
  name: DataSourceForAutomaticMigration
  relationship: reference
  restartNeeded: true
  type: weblogic.management.configuration.JDBCSystemResourceMBean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Data source required to support persistence of jobs scheduled
    with the job scheduler</p> '
  name: DataSourceForJobScheduler
  relationship: reference
  restartNeeded: true
  type: weblogic.management.configuration.JDBCSystemResourceMBean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>To support HTTP Session failover across data centers, a datasource
    is required to dump session state on disk.</p> '
  name: DataSourceForSessionPersistence
  relationship: reference
  restartNeeded: true
  type: weblogic.management.configuration.JDBCSystemResourceMBean
  writable: true
- defaultValue:
    value:
      value: 1
  descriptionHTML: 'The maximum number of times Database Leasing will try to obtain
    a valid connection from the Data Source. '
  name: DatabaseLeasingBasisConnectionRetryCount
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 1000
  descriptionHTML: 'The length of time, in milliseconds,Database Leasing will wait
    before attempting to obtain a new connection from the Data Source when a connection
    has failed. '
  name: DatabaseLeasingBasisConnectionRetryDelay
  restartNeeded: true
  type: long
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Get attributes associated with database less leasing basis
    used for server migration and singleton services.</p> '
  name: DatabaseLessLeasingBasis
  relationship: containment
  type: weblogic.management.configuration.DatabaseLessLeasingBasisMBean
- defaultValue:
    value:
      value: 1
  descriptionHTML: '<p>Gets the DeathDetectory HeartbeatPeriod value. The ClusterMaster
    sends a heartbeat every period seconds to ascertian the health of a member. Members
    monitor this heartbeat in order to ascertain the health of the server hosting
    the DeathDetector.  In this case, the ClusterMaster.</p> '
  exclude: true
  name: DeathDetectorHeartbeatPeriod
  redeployNeeded: true
  restartNeeded: true
  supported: false
  type: int
  writable: true
- defaultValue:
    value:
      value: round-robin
  descriptionHTML: '<p>Defines the algorithm to be used for load-balancing between
    replicated services if none is specified for a particular service. The <code>round-robin</code>
    algorithm cycles through a list of WebLogic Server instances in order. <code>Weight-based</code>
    load balancing improves on the round-robin algorithm by taking into account a
    pre-assigned weight for each server. In <code>random</code> load balancing, requests
    are routed to servers at random.</p> '
  legalValues:
  - round-robin
  - weight-based
  - random
  - round-robin-affinity
  - weight-based-affinity
  - random-affinity
  name: DefaultLoadAlgorithm
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'DynamicServers associated with this WLS cluster. '
  name: DynamicServers
  relationship: containment
  type: weblogic.management.configuration.DynamicServersMBean
- defaultValue:
    value:
      value: 30000
  descriptionHTML: '<p>During automatic migration, if the Cluster Master determines
    a server to be dead, it waits for this period of time (in milliseconds) before
    the Cluster Master migrates the service to another server in the cluster.</p> '
  name: FencingGracePeriodMillis
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 0
  descriptionHTML: '<p>The name of the HTTP port to which all redirected URLs will
    be sent.</p>  <p>Sets the FrontendHTTPPort for the default webserver (not virtual
    hosts) for all the servers in the cluster. Provides a method to ensure that the
    webapp will always have the correct PORT information, even when the request is
    coming through a firewall or a proxy. If this parameter is configured, the HOST
    header will be ignored and the information in this parameter will be used in its
    place, when constructing the absolute urls for redirects.</p> '
  name: FrontendHTTPPort
  redeployNeeded: true
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 0
  descriptionHTML: '<p>The name of the secure HTTP port to which all redirected URLs
    will be sent.</p>  <p>Sets the FrontendHTTPSPort for the default webserver (not
    virtual hosts) for all the servers in the cluster. Provides a method to ensure
    that the webapp will always have the correct PORT information, even when the request
    is coming through a firewall or a proxy. If this parameter is configured, the
    HOST header will be ignored and the information in this parameter will be used
    in its place, when constructing the absolute urls for redirects.</p> '
  name: FrontendHTTPSPort
  redeployNeeded: true
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The name of the host to which all redirected URLs will be sent.</p>  <p>Sets
    the HTTP FrontendHost for the default webserver (not virtual hosts) for all the
    servers in the cluster. Provides a method to ensure that the webapp will always
    have the correct HOST information, even when the request is coming through a firewall
    or a proxy. If this parameter is configured, the HOST header will be ignored and
    the information in this parameter will be used in its place, when constructing
    the absolute urls for redirects.</p> '
  name: FrontendHost
  redeployNeeded: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 3
  descriptionHTML: '<p>Interval in seconds until HTTP Sessions are periodically flushed
    to secondary server.</p> '
  name: GreedySessionFlushInterval
  type: int
  writable: true
- defaultValue:
    value:
      value: 3
  descriptionHTML: '<p>Get the number of HTTP pings to execute before declaring a
    server unreachable. This comes into effect only when MaxServerCountForHTTPPing
    is > 0.</p> '
  exclude: true
  name: HTTPPingRetryCount
  supported: false
  type: int
  writable: true
- defaultValue:
    value:
      value: 10000
  descriptionHTML: '<p>Interval in milliseconds at which Migratable Servers and Cluster
    Masters prove their liveness via the database.</p> '
  name: HealthCheckIntervalMillis
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 6
  descriptionHTML: '<p>Maximum number of periods that a cluster member will wait before
    timing out a Cluster Master and also the maximum number of periods the Cluster
    Master will wait before timing out a Migratable Server.</p> '
  name: HealthCheckPeriodsUntilFencing
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Returns the value of HttpTraceSupportEnabled. </p> '
  name: HttpTraceSupportEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 3
  descriptionHTML: '<p>Maximum number of periods that a cluster member will wait before
    timing out a member of a cluster.</p>  <p>Maximum number of periods that a cluster
    member will wait before timing out a member of a cluster.</p> '
  name: IdlePeriodsUntilTimeout
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 30000
  descriptionHTML: '<p>If the cluster link between two clusters goes down, a trigger
    will run periodically to see if the link is restored. The duration is specified
    in milliseconds.</p> '
  name: InterClusterCommLinkHealthCheckInterval
  type: int
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'JTA associated with this WLS cluster. '
  name: JTACluster
  relationship: containment
  type: weblogic.management.configuration.JTAClusterMBean
- defaultValue:
    value:
      value: WEBLOGIC_TIMERS
  descriptionHTML: '<p>The table name to use for storing timers active with the job
    scheduler</p> '
  name: JobSchedulerTableName
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 0
  descriptionHTML: '<p>This is the max number of attempts at choosing a suitable secondary
    server for replication.If it is set to 0,secondary server selection for replication
    will be tried on all servers in the cluster. </p> '
  name: MaxSecondarySelectionAttempts
  type: int
  writable: true
- defaultValue:
    value:
      value: 0
  descriptionHTML: '<p>Get the maximum number of servers that can be pinged via HTTP
    when the local server has lost multicast heartbeats from remote members. By default
    the server is taken out of the cluster when 3 consecutive heartbeats are lost.
    With this value > 0, the server attempts to ping the remote server point-to-point
    before declaring it unreachable. The ping is considered successful only when the
    cluster is in a stable state which means that the servers have already exchanged
    annoucements and the data on multicast is primarily liveliness heartbeat.</p>
    <p> NOTE: This mechanism is useful only as a substitute for multicast heartbeats.
    If subsystems rely on sending data over multicast then they will continue to fail.
    If an application relies on WebLogic features that use multicast for sending and
    receiving data over multicast, this option is not useful. It is useful for HTTP
    session replication based applications where replication updates are sent point-to-point
    and multicast is only used to determine liveliness. </p> '
  exclude: true
  name: MaxServerCountForHttpPing
  supported: false
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: 'Enables faster Automatic Service Migration times with Database
    Leasing Basis. '
  name: MemberDeathDetectorEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Maximum number of seconds that a cluster member will wait to
    discover and synchronize with other servers in the cluster. Normally, the member
    will be able to sync in 30 seconds. If the value of this attribute is higher,
    that does not necessarily mean that it will take longer for the member to warmup.
    Instead it defines an upper bound on the time that a server will wait to sync
    with the servers that it has discovered. If the value is set 0, servers will not
    attempt to discover other running server in the cluster during server initialization</p> '
  name: MemberWarmupTimeoutSeconds
  type: int
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Forces unicast messages to be processed in order. There are
    scenarios where JMS may update JNDI very frequently. It will result in a lot of
    messages over unicast. Due to the close proximity of messages the probability
    of out of order handling of messages increases which would trigger frequent state
    dumps. Frequent JNDI tree refresh may result in NameNotFoundException. Use this
    property to prevent out of order handling of messages.</p> '
  name: MessageOrderingEnabled
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>Returns all the MigratableTargets for this cluster</p> '
  name: MigratableTargets
  relationship: reference
  transient: true
  type: weblogic.management.configuration.MigratableTargetMBean
- defaultValue:
    value:
      value: database
  descriptionHTML: '<p>Controls the mechanism used for server and service migration.</p>  <ul>
    <li><b>Database</b> -- Requires the availability of a high-availability database,
    such as Oracle RAC, to store leasing information. Requires also configuring the
    <code>DataSourceForAutomaticMigration</code> attribute. Optionally also configure
    <code>AutoMigrationTableName</code> (default is "ACTIVE"), <code>AutoMigrationTableCreationPolicy</code>,
    and <code>AutoMigrationTableCreationDDLFile</code>.</li>  <li><b>Consensus</b>
    -- Stores the leasing information in-memory within a cluster member. This option
    requires Node Manager to be configured and running.</li> </ul>  <p><b>Note:</b>
    Within a WebLogic Server installation, you can only use one type of leasing. Although
    it is possible to implement multiple features that use leasing within your environment,
    each must use the same kind of leasing.</p> '
  legalValues:
  - database
  - consensus
  name: MigrationBasis
  redeployNeeded: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 180000
  descriptionHTML: '<p>Controls how long of a pause there should be between the migration
    attempts described in getAdditionalAutoMigrationAttempts(). Note that this delay
    only happens when the server has failed to come up on every machine.</p> '
  name: MillisToSleepBetweenAutoMigrationAttempts
  restartNeeded: true
  type: long
  writable: true
- defaultValue:
    value:
      value: 239.192.0.0
  descriptionHTML: '<p>The multicast address used by cluster members to communicate
    with each other.</p>  <p>The valid range is from from 224.0.0.0 to 239.255.255.255.
    The default value used by WebLogic Server is 239.192.0.0.  You should avoid using
    multicast addresses in the range x.0.0.1</p>  <p>This address should be unique
    to this cluster and should not be shared by other applications.</p> '
  name: MulticastAddress
  redeployNeeded: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 64
  descriptionHTML: '<p>The multicast socket send/receive buffer size (at least 64
    kilobytes).</p>  <p>Returns the multicast socket send/receive buffer size.</p> '
  name: MulticastBufferSize
  redeployNeeded: true
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Enables multicast data to be encrypted. Only the multicast
    data is encrypted. Multicast header information is not encrypted.</p> '
  name: MulticastDataEncryption
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 7001
  descriptionHTML: '<p>The multicast port (between 1 and 65535) used by cluster members
    to communicate with each other.</p>  <p>Defines the multicast port used by cluster
    members to communicate with each other.</p> '
  name: MulticastPort
  redeployNeeded: true
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 3
  descriptionHTML: '<p>The amount of time (between 0 and 250 milliseconds) to delay
    sending message fragments over multicast in order to avoid OS-level buffer overflow.</p>  <p>Defines
    the number of milliseconds to delay sending message fragments over multicast in
    order to avoid OS-level buffer overflow.</p> '
  name: MulticastSendDelay
  redeployNeeded: true
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 1
  descriptionHTML: '<p>The number of network hops (between 1 and 255) that a cluster
    multicast message is allowed to travel.</p>  <p>Defines the number of network
    hops that a cluster multicast message is allowed to travel. 1 restricts the cluster
    to one subnet.</p> '
  name: MulticastTTL
  redeployNeeded: true
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 3
  descriptionHTML: '<p>Number of servers to be listed from this cluster when generating
    a cluster address automatically. This setting has no effect if Cluster Address
    is explicitly set.</p> '
  name: NumberOfServersInClusterAddress
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Indicates if one-way RMI is being used for replication. One-way
    RMI also requires configuring replication ports on each server in the cluster.</p> '
  name: OneWayRmiForReplicationEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Get attributes related to server overload protection. The default
    values for all cluster members are set here. Individual servers can override them
    as needed.</p> '
  name: OverloadProtection
  relationship: containment
  type: weblogic.management.configuration.OverloadProtectionMBean
- defaultValue: {
    }
  descriptionHTML: '<p>When shutting down servers, sessions are not updated. If the
    primary and secondary servers of a session are shut down with no session updates,
    the session will be lost. Turning on PersistSessionsOnShutdown will save any active
    sessions to the database specified in ClusterMBean.getDataSourceForSessionPersistence()
    when a server is shutdown. The sessions will not be written at any other time.
    (For example, they are not saved via this mechanism if there is a server crash.)</p>  <p>This
    attribute is applicable both to session persistence on server shutdown or session
    persistence across a WAN.</p>  <p>Rolling upgrade can potentially have a bad interaction
    with traditional in-memory session replication.  As managed servers are shutdown
    and upgraded, in-memory servlet sessions will be lost if both primary and secondary
    are rebooted before a new request arrives for the session.</p> '
  name: PersistSessionsOnShutdown
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Set the foreign cluster. Cluster infrastructure uses this address
    to connect to foreign cluster for HTTP Session WAN/MAN failover.</p> '
  name: RemoteClusterAddress
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: ReplicationChannel
  descriptionHTML: '<p>The channel name to be used for replication traffic. Cluster
    infrastructure uses this channel to send updates for HTTP sessions and stateful
    session beans. If none is set then the default channel will be used.</p>  <p>In
    order for this feature to work, the named channel must exist on all members of
    the cluster and must be configured to use the same protocol. It is valid for the
    selected channel to be configured to use a secure protocol.</p> '
  name: ReplicationChannel
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Indicates if timeout should be applied to session replication
    calls.</p> '
  name: ReplicationTimeoutEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    secureModeValue:
      value: true
    value:
      value: false
  descriptionHTML: '<p>Servers in a cluster replicate session data. If a replication
    channel is defined then the session data will be sent using the replication channel
    protocol and secured replication settings will be ignored. If no replication channel
    is defined and secured replication is enabled then session data for in-memory
    replication will be sent over SSL using the default secured channel. However,
    this added security for replication traffic comes with a significant cluster performance
    degradation. It should only be enabled if security is of greater concern than
    performance degradation.</p> '
  name: SecureReplicationEnabled
  redeployNeeded: true
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>The servers which have declared membership in this cluster.</p> '
  name: Servers
  relationship: reference
  transient: true
  type: weblogic.management.configuration.ServerMBean
- defaultValue:
    value:
      value: 0
  descriptionHTML: 'The maximum time, in milliseconds seconds, for services to wait
    for response from cluster members. '
  name: ServiceActivationRequestResponseTimeout
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: 180
  descriptionHTML: '<p>The number of seconds (between 0 and 65534) by which the age
    of two conflicting services must differ before one is considered older than the
    other.</p>  <p>Defines the number of seconds by which the age of two conflicting
    services must differ before one is considered older than the other.</p> '
  name: ServiceAgeThresholdSeconds
  type: int
  writable: true
- defaultValue:
    value:
      value: 180
  descriptionHTML: '<p>Interval in seconds until HTTP Sessions are periodically flushed
    to the backup cluster to dump session state on disk.</p> '
  name: SessionFlushInterval
  type: int
  writable: true
- defaultValue:
    value:
      value: 10000
  descriptionHTML: '<p>When number of sessions to be flushed reaches this threshold
    limit, sessions will be flushed to the backup cluster before the flush interval.
    This helps the server to flush sessions faster under load.</p> '
  name: SessionFlushThreshold
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Enables increased efficiency with session replication. Enabling
    this attribute should be used only when configuring a WebLogic domain for Oracle
    Exalogic.</p> '
  name: SessionLazyDeserializationEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: 'Indicates if session state query protocol is enabled.  The Session
    State Query protocol will query the local cluster for the location of a session
    state instance if a request arrives at a server that is neither the primary or
    secondary server. '
  name: SessionStateQueryProtocolEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 30
  descriptionHTML: 'The maximum time, in seconds, for session state query request
    to wait for response from cluster members. '
  name: SessionStateQueryRequestTimeout
  type: int
  writable: true
- defaultValue:
    value:
      value: ''
  descriptionHTML: '<p>Singleton Services uses certain SQL commands to talk to the
    database. By default, the commands are obtained from a WebLogic-supplied implementation
    of weblogic.cluster.singleton.QueryHelper. If the database is not suported, or
    the SQL needs to be more optimized or altered for a particular use case, one can
    change the class used by setting this variable. The classname provided will be
    loaded at boot time, and used to execute the various SQL queries.</p> '
  exclude: true
  name: SingletonSQLQueryHelper
  restartNeeded: true
  supported: false
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 30000
  descriptionHTML: 'The maximum time, in milliseconds, for service activation requests
    will wait for response from cluster members.  <p>A value of <code>0</code> means
    that the request will wait indefinitely to complete.</p> '
  name: SingletonServiceRequestTimeout
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The name of the site this cluster is associated with.</p> '
  name: SiteName
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: 'If enabled, a server''s transaction requests go to servers in
    the cluster that are already participating in the global transaction. '
  name: TxnAffinityEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 3000
  descriptionHTML: '<p>The timer period that determines how  often other members in
    the cluster are discovered in unicast messaging scheme. This is not applicable
    to multicast mode. It applies only to unicast mode.</p> '
  exclude: true
  name: UnicastDiscoveryPeriodMillis
  supported: false
  type: int
  writable: true
- defaultValue:
    value:
      value: 15000
  descriptionHTML: 'The specified read timeout, in milliseconds, on a unicast connection.  A
    timeout of zero is interpreted as an infinite timeout, that is blocking read forever. '
  name: UnicastReadTimeout
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: WLS_WAN_PERSISTENCE_TABLE
  descriptionHTML: '<p>Return the name of the table to be used for WAN session persistence.</p> '
  name: WANSessionPersistenceTableName
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    secureModeValue:
      value: false
    value:
      value: false
  descriptionHTML: '<p>Specifies if this cluster will receive requests from a proxy
    plug-in or <code>HttpClusterServlet</code>.</p>  <p>Set this attribute to <code>true</code>
    if the cluster will receive requests from a proxy plug-in or <code>HttpClusterServlet</code>.
    A call to <code>getRemoteAddr</code> will return the address of the browser client
    from the proprietary <code>WL-Proxy-Client-IP</code> header instead of the Web
    server.</p>  <p>Set this attribute to <code>false</code> to disable the <code>weblogic-plugin-enabled</code>
    parameter, <code>weblogic-plugin-enabled=false</code>, in the <code>config.xml</code>file.</p>  <p>Note:
    If you are using Oracle HTTP Server, the WebLogic Proxy Plug-In, or Oracle Traffic
    Director to distribute client requests to a Managed Server or a cluster, Oracle
    recommends setting this attribute to <code>true</code>.</p> '
  name: WeblogicPluginEnabled
  restartNeeded: true
  type: boolean
  writable: true
