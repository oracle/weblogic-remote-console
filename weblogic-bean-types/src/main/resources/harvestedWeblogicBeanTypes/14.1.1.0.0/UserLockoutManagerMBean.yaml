# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

baseTypes:
- weblogic.descriptor.SettableBean
descriptionHTML: 'Lists and manages lockouts on user accounts. '
name: weblogic.management.security.authentication.UserLockoutManagerMBean
properties:
- defaultValue: {
    }
  deprecated: '9.0.0.0 Replaced by weblogic.management.runtime.UserLockoutManagerRuntimeMBean.getInvalidLoginAttemptsTotalCount() '
  descriptionHTML: 'Returns the number of invalid logins attempted since this server
    has been started and lockouts have been enabled.  In a cluster, this method returns
    the number of invalid logins attempted that have occured since the cluster has
    been started because all servers share login failure information. '
  name: InvalidLoginAttemptsTotalCount
  supported: false
  transient: true
  type: long
- defaultValue: {
    }
  deprecated: '9.0.0.0 Replaced by weblogic.management.runtime.UserLockoutManagerRuntimeMBean.getInvalidLoginUsersHighCount() '
  descriptionHTML: 'Returns the highest number of users with concurrent unexpired
    or uncleared invalid login attempts.  Invalid login attempts expire as specified
    by <code>LockoutResetDuration</code>. This count is useful in determining whether
    the <code>LockoutCacheSize</code> needs to be modified. '
  name: InvalidLoginUsersHighCount
  supported: false
  transient: true
  type: long
- defaultValue: {
    }
  deprecated: '9.0.0.0 Replaced by weblogic.management.runtime.UserLockoutManagerRuntimeMBean.getLockedUsersCurrentCount() '
  descriptionHTML: 'Returns the number of users that are currently locked out of this
    server. '
  name: LockedUsersCurrentCount
  supported: false
  transient: true
  type: long
- defaultValue:
    value:
      value: 5
  descriptionHTML: 'Returns the number of invalid login records that the server places
    in a cache. The server creates one record for each invalid login. '
  name: LockoutCacheSize
  restartNeeded: true
  type: long
  writable: true
- defaultValue:
    value:
      value: 30
  descriptionHTML: 'Returns the number of minutes that a user account is locked out. '
  name: LockoutDuration
  restartNeeded: true
  type: long
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: 'Returns whether the server locks out users when there are invalid
    login attempts.  A <code>true</code> value for this attribute causes the server
    to consider the other attributes of this MBean. A <code>false</code> value causes
    the server to ignore the other attributes of this MBean." '
  name: LockoutEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 400
  descriptionHTML: '<p>Returns the maximum number of invalid login records that the
    server keeps in memory.</p>  <p>If the number of invalid login records is equal
    to or greater than this value, the server''s garbage collection purges the records
    that have expired. A record expires when the user associated with the record has
    been locked out.</p>  <p>The lower the threshold, the more often the server uses
    its resources to collect garbage.</p> '
  name: LockoutGCThreshold
  restartNeeded: true
  type: long
  writable: true
- defaultValue:
    value:
      value: 5
  descriptionHTML: 'The number of minutes within which consecutive invalid login attempts
    cause the user account to be locked out. '
  name: LockoutResetDuration
  restartNeeded: true
  type: long
  writable: true
- defaultValue:
    value:
      value: 5
  descriptionHTML: 'Returns the maximum number of consecutive invalid login attempts
    before account is locked out.  When the number of invalid logins within a specified
    period of time is greater than <code>LockoutThreshold</code>value, the user is
    locked out. For example, with the default setting of <code>1</code>, the user
    is locked out on the second consecutive invalid login. With a setting of <code>2</code>,
    the user is locked out on the third consecutive invalid login. '
  name: LockoutThreshold
  restartNeeded: true
  type: long
  writable: true
- defaultValue: {
    }
  deprecated: '9.0.0.0 Replaced by weblogic.management.runtime.UserLockoutManagerRuntimeMBean.getLoginAttemptsWhileLockedTotalCount() '
  descriptionHTML: 'Returns the number of invalid logins attempted since this server
    has been started and lockouts have been enabled. '
  name: LoginAttemptsWhileLockedTotalCount
  supported: false
  transient: true
  type: long
- defaultValue:
    value:
      value: UserLockoutManager
  descriptionHTML: 'The name of this configuration. WebLogic Server uses an MBean
    to implement and persist the configuration. '
  name: Name
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: 'Returns the realm that contains this user lockout manager. Returns
    null if this security provider is not contained by a realm. '
  name: Realm
  relationship: reference
  transient: true
  type: weblogic.management.security.RealmMBean
- defaultValue: {
    }
  deprecated: '9.0.0.0 Replaced by weblogic.management.runtime.UserLockoutManagerRuntimeMBean.getUnlockedUsersTotalCount() '
  descriptionHTML: 'Returns the number times users have been unlocked since this server
    has been started. '
  name: UnlockedUsersTotalCount
  supported: false
  transient: true
  type: long
- defaultValue: {
    }
  deprecated: '9.0.0.0 Replaced by weblogic.management.runtime.UserLockoutManagerRuntimeMBean.getUserLockoutTotalCount() '
  descriptionHTML: 'Returns the number of user lockouts that have occured since this
    server has been started.  In a cluster, this method returns the number of user
    lockouts that have occured since the cluster has been started because all servers
    share login failure information. '
  name: UserLockoutTotalCount
  supported: false
  transient: true
  type: long
