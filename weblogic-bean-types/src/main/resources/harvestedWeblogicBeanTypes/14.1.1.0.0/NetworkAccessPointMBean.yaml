# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

baseTypes:
- weblogic.management.configuration.ConfigurationMBean
descriptionHTML: '<p>A server can specify additional network connections by using
  a NetworkAccessPointMBean.  The NetworkAccessPointMBean is also used to set the
  listen address and external DNS name that a server uses for a particular channel.</p> '
name: weblogic.management.configuration.NetworkAccessPointMBean
properties:
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The number of backlogged, new TCP connection requests that
    this network channel allows. A value of <code>-1</code> indicates that the network
    channel obtains its backlog configuration from the server''s configuration.</p> '
  name: AcceptBacklog
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: 'Get the value of AllowListViolationAction attribute used with
    JEP 290 filtering. The default value is obtained from the domain allow list configuration. '
  name: AllowListViolationAction
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Test if the AllowUnEncryptedNullCipher is enabled</p> <p>see
    <code>setAllowUnencryptedNullCipher(boolean enable)</code> for the NullCipher
    feature.</p> '
  name: AllowUnencryptedNullCipher
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Whether or not the channel''s custom identity should be used.
    This setting only has an effect if the server is using a customized keystore.
    By default the channel''s identity is inherited from the server''s identity.</p> '
  name: ChannelIdentityCustomized
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 50
  descriptionHTML: '<p>A weight to give this channel when creating server-to-server
    connections.</p> '
  name: ChannelWeight
  type: int
  writable: true
- array: true
  defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Indicates the cipher suites being used on a particular WebLogic
    Server channel.</p>  <p>The strongest negotiated cipher suite is chosen during
    the SSL handshake. The set of cipher suites used by default by JSEE depends on
    the specific JDK version with which WebLogic Server is configured.</p>  <p>For
    a list of possible values, see <a href="http://www.oracle.com/pls/topic/lookup?ctx=wls14110&amp;id=SECMG502"
    rel="noopener noreferrer" target="_blank">Cipher Suites</a>.</p> '
  name: Ciphersuites
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether clients must present digital certificates
    from a trusted certificate authority to WebLogic Server on this channel.</p> '
  name: ClientCertificateEnforced
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: 'Indicate whether TLS client initiated secure renegotiation is
    accepted. '
  name: ClientInitSecureRenegotiationAccepted
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The address this network channel uses to generate EJB handles
    and failover addresses for use in a cluster. This value is determined according
    to the following order of precedence:</p> <ol> <li>If the cluster address is specified
    via the NAPMBean, then that value is used</li> <li>If this value is not specified,
    the value of PublicAddress is used.</li> <li>If PublicAddress is not set, this
    value is derive from the ClusterAddress attribute of the ClusterMbean.</li> <li>If
    ClusterMbean.clusterAddress is not set, this value is derive from the listen address
    of the NAPMbean.</li> </ol> '
  name: ClusterAddress
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The maximum amount of time this network channel waits for a
    complete message to be received. A value of <code>0</code> disables network channel
    complete message timeout. A value of <code>-1</code> indicates that the network
    channel obtains this timeout value from the ServerTemplateMBean.</p>  <p>This
    timeout helps guard against denial of service attacks in which a caller indicates
    that they will be sending a message of a certain size which they never finish
    sending.</p> '
  name: CompleteMessageTimeout
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The amount of time that this network channel should wait to
    establish an outbound socket connection before timing out. A value of <code>0</code>
    disables network channel connect timeout.</p> '
  name: ConnectTimeout
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The source of the identity keystore. For a JKS keystore, the
    source is the path and file name. For an Oracle Key Store Service (KSS) keystore,
    the source is the KSS URI.</p>  <p>If using a JKS keystore, the keystore path
    name must either be absolute or relative to where the server was booted.</p>  <p>If
    using a KSS keystore, the keystore URI must be of the form:</p>  <p><code>kss://system/<i>keystorename</i></code></p>  <p>where
    <code><i>keystorename</i></code> is the name of the keystore registered in KSS.</p>  <p>The
    value in this attribute is only used if <code>ServerMBean.KeyStores</code> is
    <code>CUSTOM_IDENTITY_AND_JAVA_STANDARD_TRUST</code>, <code>CUSTOM_IDENTITY_AND_CUSTOM_TRUST</code>
    or <code>CUSTOM_IDENTITY_AND_COMMAND_LINE_TRUST</code>.</p> '
  name: CustomIdentityKeyStoreFileName
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The encrypted custom identity keystore''s passphrase. If empty
    or null, then the keystore will be opened without a passphrase.</p>  <p>This attribute
    is only used if <code>ServerMBean.KeyStores</code> is <code>CUSTOM_IDENTITY_AND_JAVA_STANDARD_TRUST</code>,
    <code>CUSTOM_IDENTITY_AND_CUSTOM_TRUST</code> or <code>CUSTOM_IDENTITY_AND_COMMAND_LINE_TRUST</code>.</p>  <p>When
    you get the value of this attribute, WebLogic Server does the following:</p> <ol><li>Retrieves
    the value of the <code>CustomIdentityKeyStorePassPhraseEncrypted</code> attribute.</li>
    <li>Decrypts the value and returns the unencrypted password as a String.</li>
    </ol>  <p>When you set the value of this attribute, WebLogic Server does the following:</p>
    <ol><li>Encrypts the value.</li> <li>Sets the value of the <code>CustomIdentityKeyStorePassPhraseEncrypted</code>
    attribute to the encrypted value.</li> </ol> <p>Using this attribute (<code>CustomIdentityKeyStorePassPhrase</code>)
    is a potential security risk because the String object (which contains the unencrypted
    password) remains in the JVM''s memory until garbage collection removes it and
    the memory is reallocated. Depending on how memory is allocated in the JVM, a
    significant amount of time could pass before this unencrypted data is removed
    from memory.</p>  <p>Instead of using this attribute, use <code>CustomIdentityKeyStorePassPhraseEncrypted</code>.</p> '
  encrypted: true
  name: CustomIdentityKeyStorePassPhrase
  type: java.lang.String
  writable: true
- array: true
  defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Returns encrypted pass phrase defined when creating the keystore.</p> '
  encrypted: true
  name: CustomIdentityKeyStorePassPhraseEncrypted
  type: byte
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The type of the keystore. Generally, this is <code>JKS</code>.
    If using the Oracle Key Store Service, this would be <code>KSS</code></p>  <p>If
    empty or null, then the JDK''s default keystore type (specified in <code>java.security</code>)
    is used. The custom identity key store type is only used if <code>ServerMBean.KeyStores</code>
    is <code>CUSTOM_IDENTITY_AND_JAVA_STANDARD_TRUST</code>, <code>CUSTOM_IDENTITY_AND_CUSTOM_TRUST</code>
    or <code>CUSTOM_IDENTITY_AND_COMMAND_LINE_TRUST</code>.</p> '
  name: CustomIdentityKeyStoreType
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The string alias used to store and retrieve the channel''s
    private key in the keystore. This private key is associated with the server''s
    digital certificate. A value of <code>null</code> indicates that the network channel
    uses the alias specified in the server''s SSL configuration.</p> '
  name: CustomPrivateKeyAlias
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The passphrase used to retrieve the server''s private key from
    the keystore. This passphrase is assigned to the private key when it is generated.
    A value of <code>null</code> indicates that the network channel uses the pass
    phrase specified in the server''s SSL configuration.</p> '
  encrypted: true
  name: CustomPrivateKeyPassPhrase
  type: java.lang.String
  writable: true
- array: true
  defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The encrypted form of passphrase used to retrieve the server''s
    private key from the keystore. </p> '
  encrypted: true
  name: CustomPrivateKeyPassPhraseEncrypted
  type: byte
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'Get custom protocol properties specified for this channel. The
    contents of the map are only know the custom protocol implementators like SIP. '
  exclude: true
  name: CustomProperties
  redeployNeeded: true
  restartNeeded: true
  supported: false
  type: java.util.Properties
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether this channel should be started.</p> '
  name: Enabled
  type: boolean
  writable: true
- array: true
  defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>List of cipher suites not to be used by WebLogic Server.</p> '
  name: ExcludedCiphersuites
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Specifies whether to ignore the installed implementation of
    the <code>weblogic.security.SSL.HostnameVerifier</code> interface (when this server
    is acting as a client to another application server).</p> '
  name: HostnameVerificationIgnored
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The name of the class that implements the <code>weblogic.security.SSL.HostnameVerifier</code>
    interface.</p>  <p>This class verifies whether the connection to the host with
    the hostname from URL should be allowed. The class is used to prevent man-in-the-middle
    attacks. The <code>weblogic.security.SSL.HostnameVerifier</code> has a <code>verify()</code>
    method that WebLogic Server calls on the client during the SSL handshake.</p> '
  name: HostnameVerifier
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether HTTP traffic should be allowed over this
    network channel.</p>  <p>HTTP is generally required by binary protocols for downloading
    stubs and other resources.</p> '
  name: HttpEnabledForThisProtocol
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The maximum amount of time (in seconds) that a connection is
    allowed to be idle before it is closed by this network channel. A value of <code>-1</code>
    indicates that the network channel obtains this timeout value from the ServerTemplateMBean.</p>  <p>This
    timeout helps guard against server deadlock through too many open connections.</p> '
  name: IdleConnectionTimeout
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Indicates the client certificate validation rules for inbound
    SSL.</p>  <p>This attribute only applies to ports and network channels using 2-way
    SSL.</p> '
  legalValues:
  - BuiltinSSLValidationOnly
  - BuiltinSSLValidationAndCertPathValidators
  name: InboundCertificateValidation
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The IP address or DNS name this network channel uses to listen
    for incoming connections. A value of <code>null</code> indicates that the network
    channel should obtain this value from the server''s configuration.</p> '
  name: ListenAddress
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The default TCP port this network channel uses to listen for
    regular (non-SSL) incoming connections. A value of <code>-1</code> indicates that
    the network channel should obtain this value from the server''s configuration.</p> '
  name: ListenPort
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The amount of time that this network channel should wait for
    a connection before timing out. A value of <code>0</code> disables network channel
    login timeout. A value of <code>-1</code> indicates that the network channel obtains
    this timeout value from the server''s configuration.</p> '
  name: LoginTimeoutMillis
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The maximum back off time between failures while accepting
    client connections. -1 implies that this value is inherited from the server.</p> '
  name: MaxBackoffBetweenFailures
  type: int
  writable: true
- defaultValue:
    value:
      value: 2147483647
  descriptionHTML: '<p>The maximum number of clients that can be connected on this
    network channel.</p> '
  name: MaxConnectedClients
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The maximum message size allowable in a message header.</p>  <p>This
    maximum attempts to prevent a denial of service attack whereby a caller attempts
    to force the server to allocate more memory than is available thereby keeping
    the server from responding quickly to other requests.</p> <p>A client can set
    this value using the <code>-Dweblogic.MaxMessageSize</code> property.</p> '
  name: MaxMessageSize
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: 'Get the minimum SSL/TLS protocol version to be used in a network
    channel. '
  name: MinimumTLSProtocolVersion
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: <unknown>
  descriptionHTML: '<p>The name of this network channel.</p> '
  key: true
  name: Name
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Indicates the server certificate validation rules for outbound
    SSL.</p>  <p>This attribute always applies to outbound SSL that is part of WebLogic
    Server (that is, an Administration Server talking to the Node Manager). It does
    not apply to application code in the server that is using outbound SSL unless
    the application code uses a <code>weblogic.security.SSL.ServerTrustManager</code>
    that is configured to use outbound SSL validation.</p> '
  legalValues:
  - BuiltinSSLValidationOnly
  - BuiltinSSLValidationAndCertPathValidators
  name: OutboundCertificateValidation
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Specifies whether new server-to-server connections may consider
    this network channel when initiating a connection. This is only relevant if the
    connection needs to be bound to the network channel''s listen address. This will
    only work for binary protocols that support both outbound and inbound traffic.</p>   <p>When
    this feature is not enabled, connections are initiated using a local address selected
    by the underlying hardware.</p>  <p>The default is false.</p>  <p>Outbound channels
    are selected at runtime either by virtue of the fact of being the only outbound-enabled
    channel for the required protocol, or by name in <code>weblogic.jndi.Environment#setProviderChannel</code>.</p>  <p>The
    HTTP protocol is implicitly enabled for all the outbound channels, but you need
    to use the WLS client library (HTTP client) and set the channel on the connection.
    </p> '
  name: OutboundEnabled
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The string alias used to store and retrieve the outbound private
    key in the keystore. This private key is associated with either a server or a
    client digital certificate. This attribute value is derived from other settings
    and cannot be physically set.</p>  <p>The returned value is determined as follows:</p>
    <ul> <li>If <code>isOutboundPrivateKeyEnabled</code> and <code>isChannelIdentityCustomized</code>
    return true, the value from <code>getCustomPrivateKeyAlias</code> is returned.</li>
    <li> Otherwise, the value from <code>SSLMBean.getOutboundPrivateKeyAlias</code>
    is returned from the <code>ServerMBean</code> for the channel.</li> </ul> '
  name: OutboundPrivateKeyAlias
  type: java.lang.String
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Specifies whether the identity specified by getCustomPrivateKeyAlias
    should be used for outbound SSL connections on this channel. In normal circumstances
    the outbound identity is determined by the caller''s environment.</p> '
  name: OutboundPrivateKeyEnabled
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The passphrase used to retrieve the outbound private key from
    the keystore. This passphrase is assigned to the private key when it is generated.
    This attribute value is derived from other settings and cannot be physically set.</p>  <p>The
    returned value is determined as follows:</p> <ul> <li>If <code>isOutboundPrivateKeyEnabled</code>
    and <code>isChannelIdentityCustomized</code> return true, the value from <code>getCustomPrivateKeyPassPhrase</code>
    is returned.</li> <li> Otherwise, the value from <code>SSLMBean.getOutboundPrivateKeyPassPhrase</code>
    is returned from the <code>ServerMBean</code> for the channel.</li> </ul> '
  name: OutboundPrivateKeyPassPhrase
  type: java.lang.String
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The string alias used to store and retrieve the channel''s
    private key in the keystore. This private key is associated with the server''s
    digital certificate. This value is derived from other settings on the channel
    and cannot be physically set.</p> '
  name: PrivateKeyAlias
  type: java.lang.String
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The passphrase used to retrieve the server''s private key from
    the keystore. This passphrase is assigned to the private key when it is generated.
    This value is derived from other settings on the channel and cannot be physically
    set.</p> '
  name: PrivateKeyPassPhrase
  type: java.lang.String
- defaultValue:
    secureModeValue:
      value: t3s
    value:
      value: t3
  descriptionHTML: '<p>The protocol this network channel should use for connections.</p> '
  name: Protocol
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The IP address or DNS name of the HTTP proxy to use for outbound
    connections on this channel. The HTTP proxy must support the CONNECT tunneling
    command.</p>  <p>This option is only effective when OutboundEnabled is set on
    the channel.</p> '
  name: ProxyAddress
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 80
  descriptionHTML: '<p>The port of the HTTP proxy to use for outbound connections
    on this channel. The HTTP proxy must support the CONNECT tunneling command.</p>  <p>This
    option is only effective when OutboundEnabled and ProxyHost are set on the channel.</p> '
  name: ProxyPort
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The IP address or DNS name representing the external identity
    of this network channel. A value of <code>null</code> indicates that the network
    channel''s Listen Address is also its external address. If the Listen Address
    is <code>null,</code>the network channel obtains its external identity from the
    server''s configuration.</p>  <p>This is required for the configurations which
    need to cross a firewall doing Network Address Translation.</p> '
  name: PublicAddress
  type: java.lang.String
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The externally published listen port for this network channel.
    A value of <code>-1</code> indicates that the network channel''s Listen Port is
    also its public listen port. If the Listen Port is <code>-1,</code>the network
    channel obtains its public listen port from the server''s configuration.</p> '
  name: PublicPort
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Resolve the listen address to use for all T3 communication</p> '
  name: ResolveDNSName
  redeployNeeded: true
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  deprecated: '14.1.1.0.0 '
  descriptionHTML: 'Enables Socket Direct Protocol (SDP) on this channel. Enable this
    attribute when configuring session replication enhancements for Managed Servers
    in a WebLogic cluster for Oracle Exalogic. SDP is removed from JDK11. '
  name: SDPEnabled
  redeployNeeded: true
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: 'Indicate whether SSLv2Hello is enabled in a network channel. '
  name: SSLv2HelloEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Determines if connections with pending responses are allowed
    to timeout. It defaults to false. If set to true, the connection will be timed
    out for this channel if it exceeds the idleConnectionTimeout value.</p>  <p>Note:
    This setting only applies to IIOP connections.</p> '
  name: TimeoutConnectionWithPendingResponses
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The interval (in seconds) at which this network channel should
    ping an HTTP-tunneled client to see if its still alive. A value of <code>-1</code>
    indicates that the network channel obtains this interval from the ServerTemplateMBean.
    (Requires you to enable tunneling for the network channel.)</p> '
  name: TunnelingClientPingSecs
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>The amount of time (in seconds) after which this network channel
    considers a missing HTTP-tunneled client to be dead. A value of <code>-1</code>
    indicates that the network channel obtains this timeout value from the ServerTemplateMBean.
    (Requires you to enable tunneling for the network channel.)</p> '
  name: TunnelingClientTimeoutSecs
  type: int
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether tunneling via HTTP should be enabled for
    this network channel. This value is not inherited from the server''s configuration.</p> '
  name: TunnelingEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether this network channel uses two way SSL.</p> '
  name: TwoWaySSLEnabled
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Specifies whether to use non-standard object serialization
    for performance. This option works in different ways for different protocols.
    In particular under IIOP this option uses Java serialization rather than RMI-IIOP
    serialization. In general using non-standard serialization is not suitable for
    interop scenarios and may imply some feature loss.</p> '
  name: UseFastSerialization
  type: boolean
  writable: true
