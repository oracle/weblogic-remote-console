# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.runtime.RuntimeMBean
derivedTypes: [
  ]
descriptionHTML: 'This bean is used to monitor the self-tuning queue '
name: weblogic.management.runtime.ThreadPoolRuntimeMBean
properties:
- defaultValue: {
    }
  descriptionHTML: '<p>The number of completed requests in the priority queue.</p> '
  name: CompletedRequestCount
  type: long
- defaultValue: {
    }
  descriptionHTML: '<p>The number of idle threads in the pool. This count does not
    include standby threads and stuck threads. The count indicates threads that are
    ready to pick up new work when it arrives</p> '
  name: ExecuteThreadIdleCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>The total number of threads in the pool.</p> '
  name: ExecuteThreadTotalCount
  type: int
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>An array of the threads currently processing work in the active
    thread pool.</p> '
  excludeFromRest: No default REST mapping for ExecuteThread
  name: ExecuteThreads
  supported: false
  type: weblogic.management.runtime.ExecuteThread
- defaultValue: {
    }
  descriptionHTML: '<p>The health state of this pool.</p> '
  name: HealthState
  type: weblogic.health.HealthState
- defaultValue: {
    }
  descriptionHTML: '<p> The threads that are being held by a request right now. These
    threads will either be declared as stuck after the configured timeout or will
    return to the pool before that. The self-tuning mechanism will backfill if necessary.
    </p> '
  name: HoggingThreadCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>Number of requests with min threads constraint picked up out
    of order for execution immediately since their min threads requirement was not
    met. This does not include the case where threads are idle during schedule.</p> '
  name: MinThreadsConstraintsCompleted
  type: long
- defaultValue: {
    }
  descriptionHTML: '<p>Number of requests that should be executed now to satisfy the
    min threads requirement.</p> '
  name: MinThreadsConstraintsPending
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>Number of requests rejected due to configured Shared Capacity
    for work managers have been reached.</p> '
  name: OverloadRejectedRequestsCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>The number of pending user requests in the priority queue.
    The priority queue contains requests from internal subsystems and users. This
    is just the count of all user requests.</p> '
  name: PendingUserRequestCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>The number of pending requests in the priority queue. This
    is the total of internal system requests and user requests.</p> '
  name: QueueLength
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>Maximum amount of requests that can be accepted in the priority
    queue. Note that a request with higher priority will be accepted in place of a
    lower priority request already in the queue even after the threshold is reached.
    The lower priority request is kept waiting in the queue till all high priority
    requests are executed. Also note that further enqueues of the low priority requests
    are rejected right away. </p> '
  name: SharedCapacityForWorkManagers
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p> The number of threads in the standby pool. Threads that are
    not needed to handle the present work load are designated as standby and added
    to the standby pool. These threads are activated when more threads are needed.
    </p> '
  name: StandbyThreadCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>Number of stuck threads in the thread pool.</p> '
  name: StuckThreadCount
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>Indicates if the RequestManager is suspended. A suspended manager
    will not dequeue work and dispatch threads till it is resumed.</p> '
  name: Suspended
  type: boolean
- defaultValue: {
    }
  descriptionHTML: '<p>The mean number of requests completed per second.</p> '
  name: Throughput
  type: double
