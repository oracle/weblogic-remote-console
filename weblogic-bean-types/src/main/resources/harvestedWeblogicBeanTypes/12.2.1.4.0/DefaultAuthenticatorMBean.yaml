# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.security.authentication.GroupEditorMBean
- weblogic.security.providers.authentication.LoginExceptionPropagatorMBean
- weblogic.management.security.ImportMBean
- weblogic.management.security.authentication.IdentityDomainAuthenticatorMBean
- weblogic.management.security.authentication.UserEditorMBean
- weblogic.management.security.authentication.GroupUserListerMBean
- weblogic.management.security.authentication.MemberGroupListerMBean
- weblogic.management.security.ExportMBean
- weblogic.management.security.authentication.GroupMemberListerMBean
- weblogic.management.security.authentication.UserAttributeEditorMBean
- weblogic.management.security.authentication.GroupMembershipHierarchyCacheMBean
- weblogic.management.security.authentication.MultiIdentityDomainAuthenticatorMBean
derivedTypes: [
  ]
descriptionHTML: '<p>The MBean that represents configuration attributes for the WebLogic       Authentication
  provider. The WebLogic Authentication provider has       methods to edit, list,
  and manage users, groups, and group membership.       User and group information
  is stored in an embedded LDAP server.        </p> '
name: weblogic.security.providers.authentication.DefaultAuthenticatorMBean
properties:
- defaultValue:
    value:
      value: WebLogic Authentication Provider
  descriptionHTML: '<p>A short description of the Authentication provider.</p> '
  name: Description
  type: java.lang.String
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Sets whether to cache group membership hierarchies found during
    recursive          membership lookup. If true, each subtree found will be cached.
    This overwrites          the default value defined in GroupMembershipHierarchyCacheMBean.</p> '
  name: EnableGroupMembershipLookupHierarchyCaching
  type: java.lang.Boolean
  writable: true
- defaultValue:
    value:
      value: unlimited
  descriptionHTML: '<p>Specifies whether recursive group membership searching is unlimited         or
    limited. Valid values are <code>unlimited</code> and <code>limited</code>.</p> '
  legalValues:
  - unlimited
  - limited
  name: GroupMembershipSearching
  type: java.lang.String
  writable: true
- array: true
  defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Sets the identity domains that the provider supports. This
    overwrites           the default value defined in MultiIdentityDomainAuthenticatorMBean.</p> '
  name: IdentityDomains
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether to prevent LDAP connections from timing out.</p> '
  name: KeepAliveEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 0
  descriptionHTML: '<p>Specifies how many levels of group membership can be searched.
    This         setting is valid only if GroupMembershipSearching is set to         <code>limited.</code>
    Valid values are 0, and positive numbers. For         example, 0 indicates only
    direct group memberships will be found, a         positive number indicates the
    number of levels to go down.</p> '
  name: MaxGroupMembershipSearchLevel
  type: java.lang.Integer
  writable: true
- defaultValue:
    value:
      value: 8
  descriptionHTML: '<p>The minimum number of characters required in a password.</p> '
  name: MinimumPasswordLength
  type: int
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Specifies whether the provider is allowed to get the user name
    from a NameCallback           versus getting the user name (and identity domain)
    from an IdentityDomainUserCallback          when the provider is configured with
    an identity domain.         </p> '
  name: NameCallbackAllowed
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Enables the storage of password information required to support
    Web         Services Security Password Digest and other digest authentication         algorithms.
    If set to <code>true</code>, the WebLogic Authentication         provider stores
    the user password in a 2-way encrypted form. The         original password can
    then be retrieved and used for digest         authentication.</p> '
  name: PasswordDigestEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: weblogic.security.providers.authentication.DefaultAuthenticationProviderImpl
  descriptionHTML: '<p>The name of the Java class used to load the Authentication         provider.</p> '
  name: ProviderClassName
  type: java.lang.String
- array: true
  defaultValue:
    value:
      value:
      - users
      - groups
      - passwords
  descriptionHTML: '<p>The users and groups that you want to be exported from this         Authentication
    provider''s database. If none are specified, all are         exported. If EnablePasswordDigestInformation
    is set to true, then          2- way encrypted passwords can be exported via the
    passwords=cleartext         constraint.</p> '
  name: SupportedExportConstraints
  type: java.lang.String
- array: true
  defaultValue:
    value:
      value:
      - DefaultAtn
  descriptionHTML: '<p>The format of the file to export. The list of supported export         formats
    is determined by this Authentication provider.</p> '
  name: SupportedExportFormats
  type: java.lang.String
- array: true
  defaultValue:
    value:
      value:
      - ''
  descriptionHTML: '<p>The users and groups that you want to be imported into this         Authentication
    provider''s database. If no constraints are          specified, all are imported.</p> '
  name: SupportedImportConstraints
  type: java.lang.String
- array: true
  defaultValue:
    value:
      value:
      - DefaultAtn
  descriptionHTML: '<p>The format of the file to import. The list of supported import         formats
    is determined by the Authentication provider from which the         users and
    groups were originally exported.</p> '
  name: SupportedImportFormats
  type: java.lang.String
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether to use the user name retrieved from                    LDAP
    as the Principal in the Subject.</p> '
  name: UseRetrievedUserNameAsPrincipal
  type: java.lang.Boolean
  writable: true
- defaultValue:
    value:
      value: '1.0'
  descriptionHTML: '<p>The version number of the Authentication provider.</p> '
  name: Version
  type: java.lang.String
