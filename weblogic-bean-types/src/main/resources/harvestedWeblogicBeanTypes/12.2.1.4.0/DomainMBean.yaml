# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

baseTypes:
- weblogic.management.configuration.ConfigurationPropertiesMBean
descriptionHTML: '<p>A WebLogic Domain is a group of servers and/or clusters which
  are administered as a group.</p> '
name: weblogic.management.configuration.DomainMBean
properties:
- defaultValue: {
    }
  descriptionHTML: 'get AdminConsoleMBean object, a console specific MBean to configure
    weblogic administration console attributes. '
  name: AdminConsole
  relationship: containment
  type: weblogic.management.configuration.AdminConsoleMBean
- creators:
  - weblogic.management.configuration.AdminServerMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: AdminServerMBean
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.AdminServerMBean
- defaultValue: {
    }
  descriptionHTML: ' '
  name: AdminServerName
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  deprecated: 'Please use <code>DomainMBean.getConfigurationAuditType()</code> '
  descriptionHTML: '<p>Specifies whether the Administration Server generates a log
    message when this WebLogic Server domain''s configuration has been modified.</p>  <p>Any
    change to a server, module, or other item in the domain (either through the Administration
    Console, command-line utilities, or the APIs) will cause the Administration Server
    to generate this informational message.</p>  <p> This attribute has been deprecated
    in favor of ConfigurationAuditType. If values for both attributes are specified,
    the resultant behavior will be the logical OR condition of the two settings.</p> '
  name: AdministrationMBeanAuditingEnabled
  supported: false
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 9002
  descriptionHTML: '<p>The common secure administration port for this WebLogic Server
    domain. (Requires you to enable the administration port.)</p> '
  name: AdministrationPort
  type: int
  writable: true
- defaultValue:
    secureModeValue:
      value: true
    value:
      value: false
  descriptionHTML: '<p>Specifies whether the domain-wide administration port should
    be enabled for this WebLogic Server domain. Because the administration port uses
    SSL, enabling the administration port requires that SSL must be configured for
    all servers in the domain.</p>  <p>The domain-wide administration port enables
    you to start a WebLogic Server instance in <code>STANDBY</code> state. It also
    allows you to separate administration traffic from application traffic in your
    domain. Because all servers in the domain must enable or disable the administration
    port at once, you configure the default administration port settings at the domain
    level.</p>  <p>If you enable the administration port:</p>  <ul> <li> <p>The administration
    port accepts only connections that specify administrator credentials.</p> </li>  <li>
    <p>Connections that specify administrator credentials can use only the administration
    port.</p> </li>  <li> <p>The command that starts managed servers must specify
    a secure protocol and the administration port: <code>-Dweblogic.management.server=https://<i>admin_server:administration_port</i></code></p>
    </li> </ul> '
  name: AdministrationPortEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: t3s
  descriptionHTML: '<p>The default protocol for communicating through the administration
    port or administration channels. (Requires you to enable the administration port
    or to create an administration channel.)</p>  <p>If requests through the administration
    port or an administration channel do not specify a protocol, WebLogic Server uses
    the protocol specified here.</p>  <p>Valid admin protocols are:</p> <ul> <li>
    t3s</li> <li> https</li> <li> iiops</li> </ul> '
  name: AdministrationProtocol
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Retrieve the AllowList configuration of JEP 290 for the Domain</p> '
  name: AllowList
  relationship: containment
  type: weblogic.management.configuration.AllowListMBean
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>The collection of deployable entities in this domain. This
    replaces the Application in previous versions. </p> '
  name: AppDeployments
  relationship: containment
  type: weblogic.management.configuration.AppDeploymentMBean
- array: true
  creators:
  - weblogic.management.configuration.ApplicationMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define applications for this Domain</p> '
  name: Applications
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.ApplicationMBean
- defaultValue:
    value:
      value: 0
  descriptionHTML: '<p>The number of archival versions of <code>config.xml</code>
    saved by the Administration Server each time the domain configuration is modified.</p> '
  name: ArchiveConfigurationCount
  restartNeeded: true
  type: int
  writable: true
- defaultValue:
    value:
      value: true
  deprecated: '9.0.0.0 The configuration is explicit written on a save call. '
  descriptionHTML: '<p>Causes the server to periodically persist changes to its configuration.</p> '
  name: AutoConfigurationSaveEnabled
  obsolete: 9.0.0.0
  restartNeeded: true
  supported: false
  type: boolean
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: 'Indicates whether autodeployed applications could include JMS
    modules. If true then any submodules defined in the application''s JMS modules
    will be deployed with default targets. The submodules define the different destinations
    in the JMS module, eg topics and queues, and if they aren''t provided with explicit
    targets they may not be properly deployed. '
  exclude: true
  name: AutoDeployForSubmodulesEnabled
  restartNeeded: true
  supported: false
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Returns the BatchConfigMBean.</p> '
  name: BatchConfig
  relationship: containment
  type: weblogic.management.configuration.BatchConfigMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Returns the Batch DataSource jndi name. This jndi name will
    be used to lookup an instance of a DataSource that will be used to store the Batch
    jobs data.</p> '
  name: BatchJobsDataSourceJndiName
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'Returns the name of the application-scoped ManagedExecutorService.
    This ManagedExecutorService instance will be used to run batch jobs that are submitted
    from applications deployed to the domain. The ManagedExecutorServiceTemplate by
    the same name must exit when a batch job is submitted in the domain. If this returns
    null, then the batch runtime will look to use the default Java EE ManagedExecutorService
    that is bound to the JNDI name: <code>java:comp/DefaultManagedExecutorService</code>. '
  name: BatchJobsExecutorServiceName
  type: java.lang.String
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.BridgeDestinationMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Return the BridgeDestinations for this Domain.</p> '
  getRoles:
    allowed:
    - Deployer
  name: BridgeDestinations
  relationship: containment
  supported: false
  type: weblogic.management.configuration.BridgeDestinationMBean
- defaultValue: {
    }
  descriptionHTML: 'Collection of global properties to be applied on all apps that
    need or support CDI in this domain. '
  name: CdiContainer
  relationship: containment
  type: weblogic.management.configuration.CdiContainerMBean
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies that deployments targeted to a cluster succeed only
    if all servers in the cluster are running.</p>  <p>By default, cluster constraints
    are disabled and deployment is attempted only on the servers that are reachable
    at the time of deployment from the Administration Server. Any servers that have
    been shut down or are temporarily partitioned from the Administration Server will
    retrieve the deployment during server startup or shortly after the network partition
    is resolved.</p> '
  name: ClusterConstraintsEnabled
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.ClusterMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the ClusterMBeans representing the cluster that have
    been configured to be part of this domain.</p> '
  name: Clusters
  relationship: containment
  type: weblogic.management.configuration.ClusterMBean
- array: true
  creators:
  - weblogic.management.configuration.CoherenceClusterSystemResourceMBean
  defaultValue: {
    }
  descriptionHTML: '<p>The CoherenceClusterSystemResourceMBeans that have been defined
    for this domain. </p> '
  name: CoherenceClusterSystemResources
  relationship: containment
  type: weblogic.management.configuration.CoherenceClusterSystemResourceMBean
- array: true
  creators:
  - weblogic.management.configuration.CoherenceManagementClusterMBean
  defaultValue: {
    }
  descriptionHTML: '<p>The CoherenceManagementClusterMBean that have been defined
    for this domain. </p> '
  name: CoherenceManagementClusters
  relationship: containment
  type: weblogic.management.configuration.CoherenceManagementClusterMBean
- array: true
  creators:
  - weblogic.management.configuration.CoherenceServerMBean
  defaultValue: {
    }
  descriptionHTML: '<p>The CoherenceServerMBeans that have been defined for this domain.
    </p> '
  name: CoherenceServers
  relationship: containment
  type: weblogic.management.configuration.CoherenceServerMBean
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>If true, then backups of the configuration will be made during
    server boot.</p> '
  name: ConfigBackupEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    secureModeValue:
      value: audit
    value:
      value: none
  descriptionHTML: 'Returns the criteria used for auditing configuration events  (configuration
    changes and other operations): <ul> <li><code>CONFIG_CHANGE_NONE</code> Configuration
    events will neither be written to the server log or directed to the Security Audit
    Framework.</li> <li><code>CONFIG_CHANGE_LOG</code> Configuration events will be
    written to the server log.</li> <li><code>CONFIG_CHANGE_AUDIT</code>Configuration
    events will be directed to the Security Audit Framework.</li> <li><code>CONFIG_CHANGE_LOG_AND_AUDIT</code>
    Configuration events will be written to the server log and directed to the Security
    Audit Framework.</li> </ul> '
  legalValues:
  - none
  - log
  - audit
  - logaudit
  name: ConfigurationAuditType
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p>The release identifier for the configuration. This identifier
    will be used to indicate the version of the configuration. All server generated
    configurations will be established with the release identifier of the running
    server. The form of the version is major.minor.servicepack.rollingpatch. Not all
    parts of the version are required. i.e. "7" is acceptable.</p> '
  name: ConfigurationVersion
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: console
  descriptionHTML: '<p>The context path that you want to use in URLs that specify
    the Administration Console. (Requires you to enable the Administration Console
    for the current domain.)</p>  <p>To access the Administration Console, you use
    the following URL: http://<i>listen-addess</i>:<i>listen-port</i>/<i>context-path</i>.
    For example, if you set the context path to <code>myconsole</code>, then you use
    the following URL to access the Administration Console: <code>http://localhost:7001/myconsole</code>.</p>  <p>To
    specify the listen address and listen port that you use to access the Administration
    Console, configure the listen address and listen port of the Administration Server.</p> '
  name: ConsoleContextPath
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether the Administration Server automatically deploys
    the Administration Console in the current domain.</p>  <p>If the Administration
    Console is not deployed, you can still use the WebLogic Scripting Tool or the
    management APIs to configure and monitor the domain.</p> '
  name: ConsoleEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: console-ext
  descriptionHTML: '<p>Returns the directory path that console extensions are loaded
    from.</p> '
  name: ConsoleExtensionDirectory
  restartNeeded: true
  type: java.lang.String
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.CustomResourceMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the JMSSystemResourceMBeans that have been defined
    for this domain.</p> '
  name: CustomResources
  relationship: containment
  type: weblogic.management.configuration.CustomResourceMBean
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether the domain should enter database passive
    mode.</p> '
  name: DBPassiveMode
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 30
  descriptionHTML: '<p>Specifies the maximum amount of time, in seconds, that is allowed
    for in-progress work to complete before entering database passive mode.</p> '
  name: DBPassiveModeGracePeriodSeconds
  type: int
  writable: true
- defaultValue: {
    }
  descriptionHTML: ' '
  name: DebugPatches
  relationship: containment
  type: weblogic.management.configuration.DebugPatchesMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Return the deployment configuration for this Domain.</p> '
  name: DeploymentConfiguration
  relationship: containment
  type: weblogic.management.configuration.DeploymentConfigurationMBean
- array: true
  defaultValue: {
    }
  descriptionHTML: 'Returns the DeploymentsMBeans representing the deployments that
    have been deployed to be part of this domain. '
  name: Deployments
  relationship: reference
  transient: true
  type: weblogic.management.configuration.DeploymentMBean
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether WLDF sends a pre-12.2.1-style diagnostic
    context along with the current-style diagnostic context.</p>  <p>If outbound communication
    to pre-12.2.1 servers is possible, this setting should always be enabled to ensure
    that those servers receive a diagnostic context that they can process. Disabling
    this setting in those scenarios can result in correlation information being lost
    across tiers, and in information reported by WLDF and DMS to become of sync in
    some situations.</p>  <p>If there is no outbound communication to pre-12.2.1 servers
    possible, it is suggested to disable this mode as only the current-style diagnostic
    context is needed to be propagated outbound (propagating the old style will not
    cause a failure, but is unnecessary overhead in that situation).</p>  <p>This
    setting affects outbound only, inbound pre-12.2.1 style diagnostic contexts are
    always understood and handled.</p> '
  name: DiagnosticContextCompatibilityModeEnabled
  type: boolean
  writable: true
- array: true
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: DomainLibraries
  relationship: containment
  supported: false
  type: weblogic.management.configuration.DomainLibraryMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Defines the common version of all servers in a domain. In a
    domain containing servers that are not all at the same release version, this attribute
    is used to determine the feature level that servers will assume.</p>  <p>The value
    must be less than or equal to the version of any managed server in the domain.</p>  <p>If
    this value is not equal to the version of the release version of the admin server,
    then the admin server will not be allowed to make modifications to the configuration.</p> '
  name: DomainVersion
  type: java.lang.String
  writable: true
- creators:
  - weblogic.management.configuration.EJBContainerMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: EJBContainer
  relationship: containment
  supported: false
  type: weblogic.management.configuration.EJBContainerMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Returns the embedded LDAP configuration for this domain.</p> '
  name: EmbeddedLDAP
  relationship: containment
  type: weblogic.management.configuration.EmbeddedLDAPMBean
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Specifies the class loading behavior for embedded adapters.
    If you enable this option, embedded adapters deployed to all partitions in the
    domain will use Java EE compliant class loading. The embedded adapter''s classes
    will be accessible from other modules in the same application.</p> '
  name: EnableEECompliantClassloadingForEmbeddedAdapters
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether optimizations for Oracle Exalogic should
    be enabled. Optimizations include improved thread management and request processing,
    and reduced lock contention. This attribute should be enabled only when configuring
    a WebLogic domain for Oracle Exalogic.</p> '
  name: ExalogicOptimizationsEnabled
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.FileStoreMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Return file stores defined in this domain</p> '
  getRoles:
    allowed:
    - Deployer
  name: FileStores
  relationship: containment
  type: weblogic.management.configuration.FileStoreMBean
- array: true
  creators:
  - weblogic.management.configuration.FileT3MBean
  defaultValue: {
    }
  deprecated: '8.1.0.0 '
  descriptionHTML: '<p>Returns the FileT3MBeans representing the FileT3s that have
    been configured to be part of this domain.</p> '
  exclude: true
  name: FileT3s
  relationship: containment
  supported: false
  type: weblogic.management.configuration.FileT3MBean
- array: true
  creators:
  - weblogic.management.configuration.ForeignJMSConnectionFactoryMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: ForeignJMSConnectionFactories
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.ForeignJMSConnectionFactoryMBean
- array: true
  creators:
  - weblogic.management.configuration.ForeignJMSDestinationMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: ForeignJMSDestinations
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.ForeignJMSDestinationMBean
- array: true
  creators:
  - weblogic.management.configuration.ForeignJMSServerMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: 'Get all the defined Foreign JMS Servers '
  exclude: true
  name: ForeignJMSServers
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.ForeignJMSServerMBean
- array: true
  creators:
  - weblogic.management.configuration.ForeignJNDIProviderMBean
  defaultValue: {
    }
  descriptionHTML: 'Get all the defined Foreign JNDI Providers '
  name: ForeignJNDIProviders
  relationship: containment
  type: weblogic.management.configuration.ForeignJNDIProviderMBean
- defaultValue:
    value:
      value: false
  deprecated: ' '
  descriptionHTML: '<p>Specifies whether the Guardian Agent is deployed when starting
    servers in the current domain.</p> '
  name: GuardianEnabled
  obsolete: ' '
  restartNeeded: true
  supported: false
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'Get the InterceptorMBeans for this domain '
  name: Interceptors
  relationship: containment
  type: weblogic.management.configuration.InterceptorsMBean
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>The collection of internal application deployments in this
    domain</p> '
  name: InternalAppDeployments
  relationship: containment
  transient: true
  type: weblogic.management.configuration.AppDeploymentMBean
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether internal applications such as the console,
    uddi, wlstestclient, and uddiexplorer are deployed on demand (first access) instead
    of during server startup. </p> '
  name: InternalAppsDeployOnDemandEnabled
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>The collection of internal libraries in this domain</p> '
  name: InternalLibraries
  relationship: containment
  transient: true
  type: weblogic.management.configuration.LibraryMBean
- array: true
  creators:
  - weblogic.management.configuration.JDBCStoreMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Return file stores defined in this domain</p> '
  name: JDBCStores
  relationship: containment
  type: weblogic.management.configuration.JDBCStoreMBean
- array: true
  creators:
  - weblogic.management.configuration.JDBCSystemResourceMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the JDBCSystemResourceMBeans that have been defined
    for this domain </p> '
  name: JDBCSystemResources
  relationship: containment
  type: weblogic.management.configuration.JDBCSystemResourceMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSBridgeDestinationMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Return the JMSBridgeDestinations for this Domain.</p> '
  getRoles:
    allowed:
    - Deployer
  name: JMSBridgeDestinations
  relationship: containment
  type: weblogic.management.configuration.JMSBridgeDestinationMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSConnectionConsumerMBean
  defaultValue: {
    }
  deprecated: ' '
  descriptionHTML: ' '
  exclude: true
  name: JMSConnectionConsumers
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSConnectionConsumerMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSConnectionFactoryMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Return the JMSConnectionFactorys for this Domain.</p> '
  name: JMSConnectionFactories
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSConnectionFactoryMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSDestinationKeyMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Retrieve JMSDestinationKeys for this Domain</p> '
  name: JMSDestinationKeys
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSDestinationKeyMBean
- array: true
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Retrieve JMSDestinations for this Domain</p> '
  name: JMSDestinations
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSDestinationMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSDistributedQueueMemberMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSDistributedQueueMembers for this Domain</p> '
  name: JMSDistributedQueueMembers
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSDistributedQueueMemberMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSDistributedQueueMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSDistributedQueues for this Domain</p> '
  name: JMSDistributedQueues
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSDistributedQueueMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSDistributedTopicMemberMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSDistributedTopicMembers for this Domain</p> '
  name: JMSDistributedTopicMembers
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSDistributedTopicMemberMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSDistributedTopicMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSDistributedTopics for this Domain</p> '
  name: JMSDistributedTopics
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSDistributedTopicMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSFileStoreMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSFileStores for this Domain</p> '
  name: JMSFileStores
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSFileStoreMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSInteropModuleMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the JMS Interop Module that have been defined for this
    domain. </p> '
  name: JMSInteropModules
  relationship: containment
  type: weblogic.management.configuration.JMSInteropModuleMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSJDBCStoreMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSJDBCStores for this Domain</p> '
  name: JMSJDBCStores
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSJDBCStoreMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSQueueMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSQueues for this Domain</p> '
  name: JMSQueues
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSQueueMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSServerMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Define JMSServers for this Domain</p> '
  name: JMSServers
  relationship: containment
  type: weblogic.management.configuration.JMSServerMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSSessionPoolMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Return the JMSSessionPools for this Domain.</p> '
  name: JMSSessionPools
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSSessionPoolMBean
- array: true
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSStores for this Domain</p> '
  name: JMSStores
  obsolete: 9.0.0.0
  relationship: reference
  supported: false
  transient: true
  type: weblogic.management.configuration.JMSStoreMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSSystemResourceMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the JMSSystemResourceMBeans that have been defined
    for this domain. </p> '
  name: JMSSystemResources
  relationship: containment
  type: weblogic.management.configuration.JMSSystemResourceMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSTemplateMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSTemplates for this Domain</p> '
  name: JMSTemplates
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSTemplateMBean
- array: true
  creators:
  - weblogic.management.configuration.JMSTopicMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define JMSTopics for this Domain</p> '
  name: JMSTopics
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.JMSTopicMBean
- defaultValue: {
    }
  descriptionHTML: 'The configuration of the JMX Subsystem. '
  name: JMX
  relationship: containment
  type: weblogic.management.configuration.JMXMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Return the JPA configuration for this Domain.</p> '
  name: JPA
  relationship: containment
  type: weblogic.management.configuration.JPAMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Return the JTA configuration for this Domain.</p> '
  name: JTA
  relationship: containment
  type: weblogic.management.configuration.JTAMBean
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>Specifies whether the Administration Server automatically deploys
    the Java Service Administration Console in the current domain.</p> '
  name: JavaServiceConsoleEnabled
  restartNeeded: true
  type: boolean
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Specifies whether features to support the use of this WebLogic
    Server as a Java Service in a cloud environment should be enabled.</p> '
  name: JavaServiceEnabled
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.JoltConnectionPoolMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Return the JoltConnectionPools for this Domain.</p> '
  name: JoltConnectionPools
  relationship: containment
  type: weblogic.management.configuration.JoltConnectionPoolMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Return the last time this domain was updated. This is guaranteed
    to be unique for a given transactional modification.</p> '
  name: LastModificationTime
  type: long
- array: true
  defaultValue: {
    }
  descriptionHTML: ' '
  name: Libraries
  relationship: containment
  type: weblogic.management.configuration.LibraryMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Returns the LifecycleManagerConfigMBean.</p> '
  name: LifecycleManagerConfig
  relationship: containment
  type: weblogic.management.configuration.LifecycleManagerConfigMBean
- array: true
  creators:
  - weblogic.management.configuration.LifecycleManagerEndPointMBean
  defaultValue: {
    }
  deprecated: '12.2.1.0.0 '
  descriptionHTML: '<p>Returns the LifecycleManager endpoints that have been configured
    within this domain.</p> '
  exclude: true
  name: LifecycleManagerEndPoints
  relationship: containment
  supported: false
  type: weblogic.management.configuration.LifecycleManagerEndPointMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Return the domain logfile configuration for this domain.</p> '
  name: Log
  relationship: containment
  type: weblogic.management.configuration.LogMBean
- array: true
  creators:
  - weblogic.management.configuration.LogFilterMBean
  defaultValue: {
    }
  descriptionHTML: 'Gets the array of log filters defined in the domain '
  name: LogFilters
  relationship: containment
  type: weblogic.management.configuration.LogFilterMBean
- defaultValue:
    value:
      value: false
  descriptionHTML: 'Configures whether log messages will be logged in legacy format
    without supplemental attributes. '
  name: LogFormatCompatibilityEnabled
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.MachineMBean
  - weblogic.management.configuration.UnixMachineMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Define machines for this Domain</p> '
  name: Machines
  relationship: containment
  type: weblogic.management.configuration.MachineMBean
- array: true
  creators:
  - weblogic.management.configuration.MailSessionMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Retrieve MailSessions for this Domain</p> '
  name: MailSessions
  relationship: containment
  type: weblogic.management.configuration.MailSessionMBean
- array: true
  creators:
  - weblogic.management.configuration.ManagedExecutorServiceTemplateMBean
  defaultValue: {
    }
  descriptionHTML: 'Get all the ManagedExecutorService templates '
  name: ManagedExecutorServiceTemplates
  relationship: containment
  type: weblogic.management.configuration.ManagedExecutorServiceTemplateMBean
- array: true
  creators:
  - weblogic.management.configuration.ManagedExecutorServiceMBean
  defaultValue: {
    }
  descriptionHTML: 'Get all the partition scoped ManagedExecutorServices '
  name: ManagedExecutorServices
  relationship: containment
  type: weblogic.management.configuration.ManagedExecutorServiceMBean
- array: true
  creators:
  - weblogic.management.configuration.ManagedScheduledExecutorServiceTemplateMBean
  defaultValue: {
    }
  descriptionHTML: 'Get all the ManagedScheduledExecutorService '
  name: ManagedScheduledExecutorServiceTemplates
  relationship: containment
  type: weblogic.management.configuration.ManagedScheduledExecutorServiceTemplateMBean
- array: true
  creators:
  - weblogic.management.configuration.ManagedScheduledExecutorServiceMBean
  defaultValue: {
    }
  descriptionHTML: 'Get all the partition scoped ManagedScheduledExecutorService '
  name: ManagedScheduledExecutorServices
  relationship: containment
  type: weblogic.management.configuration.ManagedScheduledExecutorServiceMBean
- array: true
  creators:
  - weblogic.management.configuration.ManagedThreadFactoryMBean
  defaultValue: {
    }
  descriptionHTML: 'Get all the partition scoped ManagedThreadFactories '
  name: ManagedThreadFactories
  relationship: containment
  type: weblogic.management.configuration.ManagedThreadFactoryMBean
- array: true
  creators:
  - weblogic.management.configuration.ManagedThreadFactoryTemplateMBean
  defaultValue: {
    }
  descriptionHTML: 'Get all the ManagedThreadFactory templates '
  name: ManagedThreadFactoryTemplates
  relationship: containment
  type: weblogic.management.configuration.ManagedThreadFactoryTemplateMBean
- defaultValue:
    value:
      value: 50
  descriptionHTML: 'The maximum number of running long-running requests that can be
    submitted to all the Managed Executor Services or Managed Scheduled Executor Services
    in the global/domain partition on the current server. '
  name: MaxConcurrentLongRunningRequests
  type: int
  writable: true
- defaultValue:
    value:
      value: 50
  descriptionHTML: 'The maximum number of running threads that can be created by all
    the Managed Thread Factories in the global/domain partition on the current server. '
  name: MaxConcurrentNewThreads
  type: int
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.MessagingBridgeMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the MessagingBridgeMBean representing the messaging
    bridges that have been configured to be part of this domain.</p> '
  name: MessagingBridges
  relationship: containment
  type: weblogic.management.configuration.MessagingBridgeMBean
- array: true
  creators:
  - weblogic.management.configuration.MigratableRMIServiceMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns an array of the contained MigratableRMIService MBeans</p> '
  exclude: true
  name: MigratableRMIServices
  relationship: containment
  supported: false
  type: weblogic.management.configuration.MigratableRMIServiceMBean
- array: true
  creators:
  - weblogic.management.configuration.MigratableTargetMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns an array of MigratableTarget MBeans.</p> '
  name: MigratableTargets
  relationship: containment
  type: weblogic.management.configuration.MigratableTargetMBean
- defaultValue:
    derivedDefault: true
  descriptionHTML: '<p>An alphanumeric name for this domain.</p>  <p>For more information
    on domain naming conventions, see <a href="http://www.oracle.com/pls/topic/lookup?ctx=fmw122140&amp;id=DOMCF237"
    rel="noopener noreferrer" target="_blank">Domain and Server Name Restrictions</a>
    in Understanding Domain Configuration for Oracle WebLogic Server.</p>  <p>This
    name is included as one of the key properties in the MBean''s <code>javax.management.ObjectName</code>:</p>  <p><code>Name=<i>user-specified-name</i></code></p> '
  key: true
  name: Name
  nullable: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.NetworkChannelMBean
  defaultValue: {
    }
  deprecated: '9.0.0.0 '
  descriptionHTML: '<p>Define NetworkChannels for this Domain</p> '
  name: NetworkChannels
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.NetworkChannelMBean
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether OCM functionality should be enabled for this
    domain. </p> '
  exclude: true
  name: OCMEnabled
  restartNeeded: true
  supported: false
  type: boolean
  writable: true
- defaultValue: {
    }
  descriptionHTML: 'The configuration of OptionalFeature deployment. '
  name: OptionalFeatureDeployment
  relationship: containment
  type: weblogic.management.configuration.OptionalFeatureDeploymentMBean
- array: true
  creators:
  - weblogic.management.configuration.OsgiFrameworkMBean
  defaultValue: {
    }
  descriptionHTML: '<p>OSGi framework definition for use by applications wishing to
    share services and code</p> '
  name: OsgiFrameworks
  relationship: containment
  type: weblogic.management.configuration.OsgiFrameworkMBean
- defaultValue:
    value:
      value: false
  descriptionHTML: 'Determines if the modules of applications will be deployed in
    parallel.  This setting can be overridden at the per-partition or per-application
    levels. See AppDeploymentMBean.isParallelDeployModules() '
  name: ParallelDeployApplicationModules
  type: boolean
  writable: true
- defaultValue:
    derivedDefault: true
  descriptionHTML: 'Determines if applications will be deployed in parallel.  This
    setting can be overridden at the per-partition level.  See PartitionMBean.isParallelDeployApplications() '
  name: ParallelDeployApplications
  type: boolean
  writable: true
- defaultValue:
    value:
      value: /partitions
  descriptionHTML: '<p>The URI prefix used for partition administrative virtual targets.</p> '
  name: PartitionUriSpace
  restartNeeded: true
  type: java.lang.String
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.PartitionWorkManagerMBean
  defaultValue: {
    }
  descriptionHTML: 'The partition work manager policy configurations. '
  name: PartitionWorkManagers
  relationship: containment
  type: weblogic.management.configuration.PartitionWorkManagerMBean
- array: true
  creators:
  - weblogic.management.configuration.PartitionMBean
  defaultValue: {
    }
  descriptionHTML: '<p> The partitions that have been configured to be part of this
    domain.</p> '
  name: Partitions
  relationship: containment
  type: weblogic.management.configuration.PartitionMBean
- array: true
  creators:
  - weblogic.management.configuration.PathServiceMBean
  defaultValue: {
    }
  descriptionHTML: 'Define PathService for this Domain '
  getRoles:
    allowed:
    - Deployer
  name: PathServices
  relationship: containment
  type: weblogic.management.configuration.PathServiceMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Specifies whether all servers in this domain run in production
    mode.</p> <p>You can configure servers in your domain to start in one of two modes,
    development or production. You use development mode while you are developing your
    applications. Development mode uses a relaxed security configuration and enables
    you to auto-deploy applications. You use production mode when your application
    is running in its final form. A production domain uses full security and may use
    clusters or other advanced features.</p>  <p>The runtime mode is a domain-wide
    setting. As each Managed Server starts, it refers to the mode of the Administration
    Server to determine its runtime mode. If you configure the domain to run in production
    mode, the Administration Server saves this setting to the domain''s configuration
    document.</p> '
  name: ProductionModeEnabled
  restartNeeded: true
  type: boolean
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.ReplicatedStoreMBean
  defaultValue: {
    }
  deprecated: '12.2.1.3.0 Replace with custom file store or JDBC store. '
  descriptionHTML: '<p>Return replicated memory stores defined in this domain</p> '
  name: ReplicatedStores
  relationship: containment
  type: weblogic.management.configuration.ReplicatedStoreMBean
- array: true
  creators:
  - weblogic.management.configuration.ResourceGroupTemplateMBean
  defaultValue: {
    }
  descriptionHTML: '<p>The resource group templates that have been configured in this
    domain.</p> '
  name: ResourceGroupTemplates
  relationship: containment
  type: weblogic.management.configuration.ResourceGroupTemplateMBean
- array: true
  creators:
  - weblogic.management.configuration.ResourceGroupMBean
  defaultValue: {
    }
  descriptionHTML: 'The resource groups at the domain level. '
  name: ResourceGroups
  relationship: containment
  type: weblogic.management.configuration.ResourceGroupMBean
- defaultValue: {
    }
  descriptionHTML: 'Get the Resource Management Configuration for this domain '
  name: ResourceManagement
  relationship: containment
  type: weblogic.management.configuration.ResourceManagementMBean
- defaultValue: {
    }
  descriptionHTML: 'The configuration of the Management Services Subsystem. '
  name: RestfulManagementServices
  relationship: containment
  type: weblogic.management.configuration.RestfulManagementServicesMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Return the root directory for the domain. In other words for
    a server process [ServerMBean.getRootDirectory] or [ServerMBean.getDomainDirectory]</p> '
  name: RootDirectory
  type: java.lang.String
- array: true
  creators:
  - weblogic.management.configuration.SAFAgentMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Get SAFAgentMBean for this Domain</p> '
  name: SAFAgents
  relationship: containment
  type: weblogic.management.configuration.SAFAgentMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Return the SNMPAgentMBean for this domain. This is a singleton
    MBean describing SNMP Agent configuration details. This MBean has getters and
    setters for other SNMP related configuration MBeans.</p> '
  name: SNMPAgent
  relationship: containment
  type: weblogic.management.configuration.SNMPAgentMBean
- array: true
  creators:
  - weblogic.management.configuration.SNMPAgentDeploymentMBean
  defaultValue: {
    }
  descriptionHTML: 'The SNMPAgentDeployments defined in the domain. '
  name: SNMPAgentDeployments
  relationship: containment
  type: weblogic.management.configuration.SNMPAgentDeploymentMBean
- array: true
  creators:
  - weblogic.management.configuration.SNMPAttributeChangeMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: SNMPAttributeChanges
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.SNMPAttributeChangeMBean
- array: true
  creators:
  - weblogic.management.configuration.SNMPCounterMonitorMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: SNMPCounterMonitors
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.SNMPCounterMonitorMBean
- array: true
  creators:
  - weblogic.management.configuration.SNMPGaugeMonitorMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: SNMPGaugeMonitors
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.SNMPGaugeMonitorMBean
- array: true
  creators:
  - weblogic.management.configuration.SNMPLogFilterMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: SNMPLogFilters
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.SNMPLogFilterMBean
- array: true
  creators:
  - weblogic.management.configuration.SNMPProxyMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: SNMPProxies
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.SNMPProxyMBean
- array: true
  creators:
  - weblogic.management.configuration.SNMPStringMonitorMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: SNMPStringMonitors
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.SNMPStringMonitorMBean
- array: true
  creators:
  - weblogic.management.configuration.SNMPTrapDestinationMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  exclude: true
  name: SNMPTrapDestinations
  obsolete: 9.0.0.0
  relationship: containment
  supported: false
  type: weblogic.management.configuration.SNMPTrapDestinationMBean
- defaultValue: {
    }
  descriptionHTML: '<p>Return the (new) security configuration for this domain.</p> '
  name: SecurityConfiguration
  relationship: containment
  type: weblogic.management.configuration.SecurityConfigurationMBean
- defaultValue: {
    }
  descriptionHTML: 'Get the WorkManager configuration pieces for this domain '
  name: SelfTuning
  relationship: containment
  type: weblogic.management.configuration.SelfTuningMBean
- defaultValue:
    value:
      value: 100
  descriptionHTML: '<p>Gets the history size of server migrations.</p>  <p>A value
    of -1 indicates that the history size is unlimited.</p> '
  name: ServerMigrationHistorySize
  type: int
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.ServerTemplateMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the ServerTempateMBeans representing the server templates
    that have been configured to be part of this domain.</p> '
  name: ServerTemplates
  relationship: containment
  type: weblogic.management.configuration.ServerTemplateMBean
- array: true
  creators:
  - weblogic.management.configuration.ServerMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the ServerMBeans representing the servers that have
    been configured to be part of this domain.</p> '
  name: Servers
  relationship: containment
  type: weblogic.management.configuration.ServerMBean
- defaultValue:
    value:
      value: 100
  descriptionHTML: '<p>Gets the history size of service migrations.</p>  <p>A value
    of -1 indicates that the history size is unlimited.</p> '
  name: ServiceMigrationHistorySize
  type: int
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.ShutdownClassMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Retrieve ShutdownClasses for this Domain</p> '
  name: ShutdownClasses
  relationship: containment
  type: weblogic.management.configuration.ShutdownClassMBean
- array: true
  creators:
  - weblogic.management.configuration.SingletonServiceMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Retrieve SingletonServicees for this Domain</p> '
  name: SingletonServices
  relationship: containment
  type: weblogic.management.configuration.SingletonServiceMBean
- defaultValue: {
    }
  deprecated: '12.2.1.4.0 '
  descriptionHTML: '<p>The name of the site this domain is associated with.</p> '
  name: SiteName
  type: java.lang.String
  writable: true
- array: true
  creators:
  - weblogic.management.configuration.StartupClassMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Retrieve StartupClasses for this Domain</p> '
  name: StartupClasses
  relationship: containment
  type: weblogic.management.configuration.StartupClassMBean
- array: true
  creators:
  - weblogic.management.configuration.SystemComponentConfigurationMBean
  defaultValue: {
    }
  descriptionHTML: 'Returns the SystemComponentConfigurationMBeans, representing the
    system system component configurations that have been configured to be part of
    this domain. '
  name: SystemComponentConfigurations
  relationship: containment
  type: weblogic.management.configuration.SystemComponentConfigurationMBean
- array: true
  creators:
  - weblogic.management.configuration.SystemComponentMBean
  defaultValue: {
    }
  descriptionHTML: 'Returns the SystemComponentMBeans, representing the system system
    components that have been configured to be part of this domain. '
  name: SystemComponents
  relationship: containment
  type: weblogic.management.configuration.SystemComponentMBean
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>Return the SystemResourceMBeans in this Domain.</p> '
  name: SystemResources
  relationship: reference
  transient: true
  type: weblogic.management.configuration.SystemResourceMBean
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>Define targets for this Domain</p> '
  name: Targets
  relationship: reference
  transient: true
  type: weblogic.management.configuration.TargetMBean
- array: true
  creators:
  - weblogic.management.configuration.VirtualHostMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Defines virtual hosts for this domain.</p> '
  name: VirtualHosts
  relationship: containment
  type: weblogic.management.configuration.VirtualHostMBean
- array: true
  creators:
  - weblogic.management.configuration.VirtualTargetMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Defines virtual targets for a domain partition.</p> '
  name: VirtualTargets
  relationship: containment
  type: weblogic.management.configuration.VirtualTargetMBean
- array: true
  creators:
  - weblogic.management.configuration.WLDFSystemResourceMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Returns the WLDFSystemResourceMBeans that have been defined
    for this domain. </p> '
  name: WLDFSystemResources
  relationship: containment
  type: weblogic.management.configuration.WLDFSystemResourceMBean
- array: true
  creators:
  - weblogic.management.configuration.WSReliableDeliveryPolicyMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Define wSReliableDeliveryPolicies for this Domain</p> '
  name: WSReliableDeliveryPolicies
  relationship: containment
  type: weblogic.management.configuration.WSReliableDeliveryPolicyMBean
- array: true
  creators:
  - weblogic.management.configuration.WTCServerMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Return the WTCServerMBeans for this Domain.</p> '
  name: WTCServers
  relationship: containment
  type: weblogic.management.configuration.WTCServerMBean
- defaultValue: {
    }
  descriptionHTML: 'Collection of global properties to be applied on all webapps in
    this domain. '
  name: WebAppContainer
  relationship: containment
  type: weblogic.management.configuration.WebAppContainerMBean
- array: true
  creators:
  - weblogic.management.configuration.WebserviceSecurityMBean
  defaultValue: {
    }
  descriptionHTML: ' '
  name: WebserviceSecurities
  relationship: containment
  type: weblogic.management.configuration.WebserviceSecurityMBean
- defaultValue: {
    }
  descriptionHTML: 'The configuration of Web Service Test Page. '
  name: WebserviceTestpage
  relationship: containment
  type: weblogic.management.configuration.WebserviceTestpageMBean
- array: true
  creators:
  - weblogic.management.configuration.XMLEntityCacheMBean
  defaultValue: {
    }
  descriptionHTML: 'Returns all the XMLEntityCache objects defined in this domain '
  name: XMLEntityCaches
  relationship: containment
  type: weblogic.management.configuration.XMLEntityCacheMBean
- array: true
  creators:
  - weblogic.management.configuration.XMLRegistryMBean
  defaultValue: {
    }
  descriptionHTML: '<p>Define xMLRegistries for this Domain</p> '
  name: XMLRegistries
  relationship: containment
  type: weblogic.management.configuration.XMLRegistryMBean
