# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

baseTypes:
- weblogic.security.providers.authentication.LDAPAuthenticatorMBean
descriptionHTML: '<p>The MBean that represents LDAP schema definitions for the Active       Directory
  LDAP Authentication provider.</p> '
name: weblogic.security.providers.authentication.ActiveDirectoryAuthenticatorMBean
properties:
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Boolean value that indicates whether SID to group name lookup
    results are cached or not.                  This is only used if the token group
    membership lookup algorithm is enabled.</p> '
  name: EnableSIDtoGroupLookupCaching
  restartNeeded: true
  type: java.lang.Boolean
  writable: true
- defaultValue:
    value:
      value: ou=WLSGROUPS,dc=example,dc=com
  descriptionHTML: '<p>The attribute of an LDAP user object that specifies the         Distinguished
    Names (DNs) of dynamic groups to which the user         belongs.</p> '
  name: GroupBaseDN
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: (&(cn=%g)(objectclass=group))
  descriptionHTML: '<p>LDAP search filter for finding a group given the name of the
    group.         If the attribute is not specified (that is, if the attribute is
    null         or empty), a default search filter is created based on the group         schema.</p> '
  name: GroupFromNameFilter
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: objectguid
  descriptionHTML: '<p>Specifies the name of the GUID attribute defined in the Active
    Directory LDAP server.           The default value is <code>objectguid</code>.</p> '
  name: GuidAttribute
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 500
  descriptionHTML: '<p>The maximum size of the LRU cache for holding SID to group
    lookups if caching of                  SID to group name mappings is enabled and
    if the tokenGroups group membership                  lookup is enabled. The default
    is 500.</p> '
  name: MaxSIDToGroupLookupsInCache
  restartNeeded: true
  type: java.lang.Integer
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Specifies whether to retrieve the userAccountControl attribute
    from Active Directory.          The default value is true.</p> '
  name: RetrieveUserAccountControl
  type: java.lang.Boolean
  writable: true
- defaultValue:
    value:
      value: (&(member=%M)(objectclass=group))
  descriptionHTML: '<p>An LDAP search filter that, given the distinguished name (DN)
    of a         member of a group, returns the DNs of the static LDAP groups that         contain
    that member.</p> '
  name: StaticGroupDNsfromMemberDNFilter
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: member
  descriptionHTML: '<p>The attribute of the LDAP static group object that specifies
    the         distinguished names (DNs) of the members of the group.</p> '
  name: StaticMemberDNAttribute
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: false
  descriptionHTML: '<p>Boolean value that indicates whether to use TokenGroups attribute
    lookup algorithm instead                  of the standard recursive group membership
    lookup algorithm. </p> '
  name: UseTokenGroupsForGroupMembershipLookup
  restartNeeded: true
  type: java.lang.Boolean
  writable: true
- defaultValue:
    value:
      value: ou=WLSMEMBERS,dc=example,dc=com
  descriptionHTML: '<p>The base Distinguished Name (DN) of the tree in the LDAP directory         that
    contains users.</p> '
  name: UserBaseDN
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: (&(cn=%u)(objectclass=user))
  descriptionHTML: '<p>LDAP search filter for finding a user given the name of the
    user.         The default value is "(&amp;(cn=%u)(objectclass=user))". In          Active
    Directory, generally, cn stores a string that is a combination          of the
    user''s first name and last name, and sAMAccountName stores the          user''s
    login name. So it is recommended that you set          "(&amp;(sAMAccountName=%u)(objectclass=user))"
    to this property          before using the Active Directory LDAP Authentication
    provider. It is          for backward compatibility purpose that the default value
    is          "(&amp;(cn=%u)(objectclass=user))" instead of          "(&amp;(sAMAccountName=%u)(objectclass=user))".</p> '
  name: UserFromNameFilter
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: cn
  descriptionHTML: '<p>The attribute of the LDAP User object that specifies the name
    of the         user. The default value is "cn". In Active Directory, generally,         cn
    stores a string that is a combination of the user''s first name and last         name,
    and sAMAccountName stores the user''s login name. So it is recommended          that
    you set "sAMAccountName" to this property before using the Active          Directory
    LDAP Authentication provider. It is for backward compatibility          purpose
    that the default value is "cn" instead of          "sAMAccountName".</p> '
  name: UserNameAttribute
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: user
  descriptionHTML: '<p>The name of the LDAP object class that stores users.</p> '
  name: UserObjectClass
  restartNeeded: true
  type: java.lang.String
  writable: true
