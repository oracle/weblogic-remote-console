# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.runtime.RuntimeMBean
derivedTypes: [
  ]
descriptionHTML: ' '
name: weblogic.management.runtime.SpringBeanDefinitionRuntimeMBean
properties:
- defaultValue: {
    }
  descriptionHTML: '<p>Whether this Spring bean is "abstract". An abstract bean definition
    can be used as a base for other definitions but cannot be instantiated.</p> '
  name: Abstract
  type: boolean
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>Get the aliases for this bean definition. Aliases are other
    names this bean definition is known by.</p> '
  name: Aliases
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Display name of the application context that this Spring bean
    is defined in. The application context is the Spring Inversion of Control (IoC)
    container.</p> '
  name: ApplicationContextDisplayName
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Whether this bean is a candidate to be autowired to other beans.</p> '
  name: AutowireCandidate
  type: boolean
- defaultValue: {
    }
  descriptionHTML: '<p>Class name of this Spring bean, as defined in the application
    context of the Spring application.</p> '
  name: BeanClassname
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Name of the Spring bean.</p> '
  name: BeanId
  type: java.lang.String
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>Get the names (ids) of other bean definitions that this bean
    definition depends on.</p> '
  name: Dependencies
  type: java.lang.String
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>Dependency values to be injected into this bean.</p> '
  excludeFromRest: No default REST mapping for SpringBeanDependencyValue
  name: DependencyValues
  supported: false
  type: weblogic.management.runtime.SpringBeanDependencyValue
- defaultValue: {
    }
  descriptionHTML: '<p>Whether this bean should be lazily initialized. A lazy initialized
    bean is not created until it is needed.</p> '
  name: LazyInit
  type: boolean
- defaultValue: {
    }
  descriptionHTML: '<p>Name (Id) of parent bean definition.</p> '
  name: ParentId
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>The name of the resource that this bean definition comes from.
    May be empty if the bean is implicitly registered.</p> '
  name: ResourceDescription
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Role hint of this bean definition. The role is one of ROLE_APPLICATION,
    ROLE_SUPPORT, or ROLE_INFRASTRUCTURE.</p> '
  name: Role
  type: int
- defaultValue: {
    }
  descriptionHTML: '<p>Scope of this bean. The scope is "singleton", "prototype",
    or other web specific or user defined values.</p> '
  name: Scope
  type: java.lang.String
- defaultValue: {
    }
  descriptionHTML: '<p>Whether this is a singleton Spring bean. There is just one
    instance of a singleton bean per bean definition per application context.</p> '
  name: Singleton
  type: boolean
