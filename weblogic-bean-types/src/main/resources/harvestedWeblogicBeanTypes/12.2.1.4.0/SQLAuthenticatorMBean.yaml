# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.management.security.authentication.GroupEditorMBean
- weblogic.management.security.authentication.UserEditorMBean
- weblogic.security.providers.authentication.ReadOnlySQLAuthenticatorMBean
- weblogic.management.security.authentication.MemberGroupListerMBean
- weblogic.management.security.authentication.GroupMemberListerMBean
derivedTypes: [
  ]
descriptionHTML: '<p>This MBean contains configuration information for the SQL       Authentication
  Provider.</p> '
name: weblogic.security.providers.authentication.SQLAuthenticatorMBean
properties:
- defaultValue:
    value:
      value: SHA-1
  descriptionHTML: '<p>The message digest algorithm used to hash passwords for storage.         The
    name is a standard algorithm name and must be recognized by a Java Cryptography
    Extension (JCE)         provider that is available at runtime.</p>         <p>The
    Java Cryptography Architecture (JCA) defines the standard algorithm specifications,         described
    at <a href="http://java.sun.com/javase/6/docs/technotes/guides/security/StandardNames.html#algspec">http://java.sun.com/javase/6/docs/technotes/guides/security/StandardNames.html#algspec</a>.</p> '
  name: PasswordAlgorithm
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: SALTEDHASHED
  descriptionHTML: '<p>Indicates the password style that is used when storing passwords         for
    users that are created and for changing the user''s password if         Password
    Style Retained is disabled.</p> '
  legalValues:
  - PLAINTEXT
  - HASHED
  - SALTEDHASHED
  name: PasswordStyle
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p>Controls how a password is stored in the database when updating
    an         existing user''s password. </p>         <ul>           <li>True indicates
    the password style and algorithm that were           used for the original password
    in the database should be used for           the new password. This setting is
    the default.</li>           <li>False indicates the settings for Password Algorithm
    and Password           Style will be used for the new password.</li>         </ul> '
  name: PasswordStyleRetained
  type: boolean
  writable: true
- defaultValue:
    value:
      value: weblogic.security.providers.authentication.DBMSSQLAuthenticationProviderImpl
  descriptionHTML: '<p>The name of the Java class for the SQL Authentication provider.</p> '
  name: ProviderClassName
  type: java.lang.String
- defaultValue:
    value:
      value: INSERT INTO GROUPMEMBERS VALUES( ?, ?)
  descriptionHTML: '<p>The SQL statement used to add a specific member to a group.
    The SQL         statement requires two parameters: the group name and the group
    member         being added.</p> '
  name: SQLAddMemberToGroup
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: INSERT INTO GROUPS VALUES ( ? , ? )
  descriptionHTML: '<p>The SQL statement used to create a new group. The SQL statement
    requirements          depend on the value of Descriptions         Supported. There
    is a minimum of one parameter, the group name. If         Descriptions Supported
    is true, the group''s description is required.         The default SQL is based
    on the default setting of Descriptions         Supported. The setting of Create
    Group must be updated manually if the         setting of Descriptions Supported
    changes.</p> '
  name: SQLCreateGroup
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: INSERT INTO USERS VALUES ( ? , ? , ? )
  descriptionHTML: '<p>The SQL statement used to create a new user record. The SQL         statement
    requirements depend on the value of Descriptions Supported.         There is a
    minimum of two parameters: a username and its associated         password. If
    Descriptions Supported is true, the user''s description is         required. The
    default SQL is based on the default setting of         Descriptions Supported.
    The setting of Create User must be updated         manually if the setting of
    Descriptions Supported changes.</p> '
  name: SQLCreateUser
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: SELECT G_MEMBER FROM GROUPMEMBERS WHERE G_NAME = ? AND G_MEMBER LIKE
        ?
  descriptionHTML: '<p>The SQL statement used to list groups that have a group name
    with a         list of wildcarded member names. The SQL statement requires two         parameters:
    the group name and the wildcarded member name.</p> '
  name: SQLListGroupMembers
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: DELETE FROM GROUPS WHERE G_NAME = ?
  descriptionHTML: '<p>The SQL statement used to remove a member from a group. The
    SQL         statement requires a single parameter: the group name being         removed.</p> '
  name: SQLRemoveGroup
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: DELETE FROM GROUPMEMBERS WHERE G_NAME = ?
  descriptionHTML: '<p>The SQL statement used to remove a member from a group. The
    SQL         statement requires a single parameter: the username or group name         being
    removed.</p> '
  name: SQLRemoveGroupMember
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: DELETE FROM GROUPMEMBERS WHERE G_MEMBER = ? OR G_NAME = ?
  descriptionHTML: '<p>The SQL statement used to delete a group member (either a user
    or         group) from all groups to which it belongs. The SQL statement requires         2
    parameters. Both parameters refer to the specific username or group         name
    being removed.</p> '
  name: SQLRemoveGroupMemberships
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: DELETE FROM GROUPMEMBERS WHERE G_NAME = ? AND G_MEMBER = ?
  descriptionHTML: '<p>The SQL statement used to remove a member from a group. The
    SQL         statement requires two parameters: the group name and the group member         being
    deleted from the group.</p> '
  name: SQLRemoveMemberFromGroup
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: DELETE FROM USERS WHERE U_NAME = ?
  descriptionHTML: '<p>The SQL statement used for deleting a user. The SQL statement         requires
    a single parameter, the username.</p> '
  name: SQLRemoveUser
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: UPDATE GROUPS SET G_DESCRIPTION = ? WHERE G_NAME =  ?
  descriptionHTML: '<p>The SQL statement used to specify a description for a group.
    Only         valid if Descriptions Supported attribute is enabled. The SQL         statement
    requires two parameters: the group description and the group         name.</p> '
  name: SQLSetGroupDescription
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: UPDATE USERS SET U_DESCRIPTION  = ? WHERE U_NAME = ?
  descriptionHTML: '<p>The SQL statement used to specify description for a user. Only         valid
    if Descriptions Supported is true. The SQL statement requires         two parameters:
    the username description and the username.</p> '
  name: SQLSetUserDescription
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: UPDATE USERS SET U_PASSWORD = ? WHERE U_NAME = ?
  descriptionHTML: '<p>The SQL statement used to set the password for a user. The
    SQL         statement requires two parameters: the password for the user and the         username.</p> '
  name: SQLSetUserPassword
  type: java.lang.String
  writable: true
