# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

baseTypes:
- weblogic.management.configuration.RMCFactoryMBean
descriptionHTML: '<p>Facilitates using the JavaMail APIs, which provide applications
  and other Java EE modules with access to Internet Message Access Protocol (IMAP)-
  and Simple Mail Transfer Protocol (SMTP)-capable mail servers on your network or
  the Internet.</p>  <p>In the reference implementation of JavaMail, applications
  must instantiate <code>javax.mail.Session</code> objects, which designate mail hosts,
  transport and store protocols, and a default mail user for connecting to a mail
  server. In WebLogic Server, you create a mail session, which configures a <code>javax.mail.Session</code>
  object and registers it in the WebLogic Server JNDI tree. Applications access the
  mail session through JNDI instead of instantiating their own javax.mail.Session
  object.</p> '
name: weblogic.management.configuration.MailSessionMBean
properties:
- defaultValue:
    derivedDefault: true
  descriptionHTML: 'jmsserverjmshat on <p>The user-specified name of this MBean instance.</p>  <p>This
    name is included as one of the key properties in the MBean''s <code>javax.management.ObjectName</code>:</p>  <p><code>Name=<i>user-specified-name</i></code></p> '
  key: true
  name: Name
  nullable: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The configuration options and user authentication data that
    this mail session uses to interact with a mail server. Each property that you
    specify overrides the default property value as defined by the JavaMail API Design
    Specification.</p> <p>Include only the properties defined by the JavaMail API
    Design Specification.</p> <p>If you do not specify any properties, this mail session
    will use the JavaMail default property values.</p> <p>Express each property as
    a <code><i>name</i>=<i>value</i></code> pair. Separate multiple properties with
    a semicolon (<code>;</code>).</p> '
  name: Properties
  restartNeeded: true
  type: java.util.Properties
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>The decrypted JavaMail Session password attribute, for use
    only temporarily in-memory; the value returned by this attribute should not be
    held in memory long term.</p>  <p>The value is stored in an encrypted form in
    the descriptor file and when displayed in an administration console.</p> '
  encrypted: true
  getRoles:
    allowed:
    - Deployer
  name: SessionPassword
  restartNeeded: true
  transient: true
  type: java.lang.String
  writable: true
- array: true
  defaultValue: {
    }
  descriptionHTML: '<p>The encrypted JavaMail Session password as set with <code>setSessionPassword()</code>,
    <code>setSessionPasswordEncrypted(byte[] bytes)</code>. '
  encrypted: true
  getRoles:
    allowed:
    - Deployer
  name: SessionPasswordEncrypted
  restartNeeded: true
  type: byte
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p> Returns the username to be used to create an authenticated
    JavaMail Session, using a JavaMail <code>Authenticator</code> instance; if this
    is not set, it will be assumed that the Session is not to be authenticated. </p> '
  getRoles:
    allowed:
    - Deployer
  name: SessionUsername
  restartNeeded: true
  type: java.lang.String
  writable: true
