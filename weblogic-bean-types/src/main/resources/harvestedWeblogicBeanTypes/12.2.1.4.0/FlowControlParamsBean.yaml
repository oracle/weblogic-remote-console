# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

baseTypes:
- weblogic.descriptor.SettableBean
descriptionHTML: '<p>Many clients producing messages can cause the server to fall
  behind in processing messages.  The flow control parameters can help by slowing
  down production of messages.  Using flow control can help the overall throughput
  of the system.</p> '
name: weblogic.j2ee.descriptor.wl.FlowControlParamsBean
properties:
- defaultValue:
    value:
      value: true
  descriptionHTML: '<p> Specifies whether a producer created using a connection factory
    allows flow control. If true, the associated message producers will be slowed
    down if a JMS server or a destination reaches its specified upper byte or message
    threshold.</p> '
  name: FlowControlEnabled
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 60
  descriptionHTML: '<p> The adjustment period of time, in seconds, when a producer
    adjusts its flow from the FlowMaximum number of messages to the FlowMinimum amount,
    or vice versa.</p> <p> When a producer is flow controlled, it is slowed down from
    its FlowMaximum to its FlowMinimum over the specified FlowInterval amount of seconds.</p> '
  name: FlowInterval
  type: int
  writable: true
- defaultValue:
    value:
      value: 500
  descriptionHTML: '<p> The maximum number of messages-per-second allowed for a producer
    that is experiencing a threshold condition. When a producer is flow controlled
    it will never be allowed to go faster than the FlowMaximum messages per second.</p>
    <p> If a producer is not currently limiting its flow when a threshold condition
    is reached, the initial flow limit for that producer is set to FlowMaximum. If
    a producer is already limiting its flow when a threshold condition is reached
    (the flow limit is less than FlowMaximum), then the producer will continue at
    its current flow limit until the next time the flow is evaluated.</p> <p> <b>Note:</b>
    Once a threshold condition has subsided, the producer is not permitted to ignore
    its flow limit. If its flow limit is less than the FlowMaximum, then the producer
    must gradually increase its flow to the FlowMaximum each time the flow is evaluated.
    When the producer finally reaches the FlowMaximum, it can then ignore its flow
    limit and send without limiting its flow. </p> '
  name: FlowMaximum
  type: int
  writable: true
- defaultValue:
    value:
      value: 50
  descriptionHTML: '<p> The minimum number of messages-per-second allowed for a producer
    that is experiencing a threshold condition. This is the lower boundary of a producer''s
    flow limit. That is, WebLogic JMS will not further slow down a producer whose
    message flow limit is at its FlowMinimum. </p> <p> When a producer is flow controlled
    it will never be required to go slower than FlowMinimum messages per second. </p> '
  name: FlowMinimum
  type: int
  writable: true
- defaultValue:
    value:
      value: 10
  descriptionHTML: '<p>The number of steps used when a producer is adjusting its flow
    from the Flow Maximum amount of messages to the Flow Minimum amount, or vice versa.
    Specifically, the Flow Interval adjustment period is divided into the number of
    Flow Steps (for example, 60 seconds divided by 6 steps is 10 seconds per step).
    </p>  <p>Also, the movement (i.e., the rate of adjustment) is calculated by dividing
    the difference between the Flow Maximum and the Flow Minimum into steps. At each
    Flow Step, the flow is adjusted upward or downward, as necessary, based on the
    current conditions, as follows:</p> <ul> <li>The downward movement (the decay)
    is geometric over the specified period of time (Flow Interval) and according to
    the specified number of Flow Steps. (For example, 100, 50, 25, 12.5)</li> <li>The
    movement upward is linear. The difference is simply divided by the number of steps.</li>
    </ul> '
  name: FlowSteps
  type: int
  writable: true
- defaultValue:
    value:
      value: disabled
  descriptionHTML: '<p>Specifies whether message producers created using this connection
    factory are allowed to do one-way message sends to improve typical non-persistent,
    non-transactional messaging performance. When enabled, the associated queue senders
    and/or topic publishers can send messages without internally waiting for a response
    from the target destination''s host JMS server.</p>  <p>One-way sends are supported
    only when the connection factory hosting the producer and the JMS server hosting
    the target destination are targeted to the same WebLogic Server instance. In addition,
    one-way sends are not supported for higher quality-of-service (QOS) features,
    such as XA, transacted sessions, persistent messaging, unit-of-order, unit-of-work,
    distributed destinations, and client-side store-and-forward. If the producer and
    target destination are in separate domains, or if any of these higher QOS features
    are detected, then the one-way mode setting will be ignored and standard two-way
    sends will be used instead.</p>  <ul> <li><b>Disabled</b> One-way send is disabled.</li>  <li><b>Enabled</b>
    One-way send is permitted for queue senders or topic publishers.</li>  <li><b>Topic
    Only</b> Only topic publishers are permitted to do one-way sends.</li> </ul>  <p><b>Notes:</b></p>
    <ul> <li>One-way message sends are disabled if your connection factory is configured
    with <code>XA Connection Factory Enabled</code>. This setting disables one-way
    sends whether or not the sender actually uses transactions.</li>  <li>To benefit
    from one-way performance, the default <code>One-Way Send Window Size</code> value
    must also be configured higher. After every <code>OneWaySendWindowSize - 1</code>
    number of messages, a two-way is used instead of a one-way, so all messages are
    actually two-way when the <code>OneWaySendWindowSize = 1</code>.</li> </ul> '
  name: OneWaySendMode
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 1
  descriptionHTML: '<p> Specifies the maximum number of sent messages per window when
    <code>One-Way Send Mode</code> is set to allow queue senders and/or topic publishers
    to make one-way sends. The window size determines when a two-way message is required
    to regulate the producer before it can continue making additional one-way sends.</p>  <p>To
    benefit from one-way performance, the default <code>One-Way Send Window Size</code>
    value must be configured higher <i>in addition to</i> enabling one-way sends.
    After every <code>OneWaySendWindowSize - 1</code> number of messages, a two-way
    is used instead of a one-way, so all messages are actually two-way when the <code>OneWaySendWindowSize
    = 1</code>.</p> '
  name: OneWaySendWindowSize
  type: int
  writable: true
roles:
  allowed:
  - Deployer
