# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

actions: [
  ]
baseTypes:
- weblogic.descriptor.SettableBean
derivedTypes: [
  ]
descriptionHTML: 'This class represents a Store-and-Forward (SAF) agent. A SAF sending
  agent takes care of storing messages to a persistent storage, forwarding messages
  to the receiving side, and re-transmitting messages when acknowledgements do not
  come back in time. A SAF receiving agent takes care of detecting and eliminating
  duplicate messages sent by the receiving agent, and deliver messages to the final
  endpoint.  <h3 class="TypeSafeDeprecation">Deprecation of MBeanHome and Type-Safe
  Interfaces</h3>  <p class="TypeSafeDeprecation">This is a type-safe interface for
  a WebLogic Server MBean, which you can import into your client classes and access
  through <code>weblogic.management.MBeanHome</code>. As of 9.0, the <code>MBeanHome</code>
  interface and all type-safe interfaces for WebLogic Server MBeans are deprecated.
  Instead, client classes that interact with WebLogic Server MBeans should use standard
  JMX design patterns in which clients use the <code>javax.management.MBeanServerConnection</code>
  interface to discover MBeans, attributes, and attribute types at runtime.</p> '
name: weblogic.j2ee.descriptor.wl.DefaultSAFAgentBean
properties:
- defaultValue:
    value:
      value: -1
  descriptionHTML: '<p>The maximum bytes quota (total amount of bytes) that can be
    stored in this SAF agent.</p>  <ul> <li> <p>The default value of <code>-1</code>
    specifies that there is no WebLogic-imposed limit on the number of bytes that
    can be stored. However, excessive bytes volume can cause memory saturation, so
    this value should correspond to the total amount of available system memory relative
    to the rest of your application load.</p> </li>  <li> <p>Applies only to agents
    with sending capability.</p> </li>  <li> <p>Updating <code>BytesMaximum</code>
    affects only new requests.</p> </li> </ul>  <p><b>Range of Values:</b> &gt;= BytesThresholdHigh</p> '
  name: BytesMaximum
  type: long
  writable: true
- defaultValue:
    value:
      value: 20000
  descriptionHTML: '<p>The amount of time, in milliseconds, between the original delivery
    attempt and the first retry.</p>  <ul> <li> <p>If <code>RetryDelayMultiplier</code>
    is set to <code>1</code>, this defines the interval between any two successive
    retry attempts.</p> </li>  <li> <p>Applies only to agents with sending capability.</p>
    </li>  <li> <p>Updating <code>DefaultRetryDelayBase</code> causes connections
    starting after the update to use the new value.</p> </li> </ul>  <p><b>Range of
    Values:</b> &lt;= RetryDelayMaximum if RetryDelayMultiplier is not 1.0. </p> '
  name: DefaultRetryDelayBase
  type: long
  writable: true
- defaultValue:
    value:
      value: 180000
  descriptionHTML: '<p>The maximum amount of time, in milliseconds, between two successive
    delivery retry attempts.</p>  <ul> <li> <p>Applies only to agents with sending
    capability.</p> </li>  <li> <p>Updating <code>DefaultRetryDelayMaximum</code>
    causes connections starting after the update to use the new value.</p> </li> </ul>  <p><b>Range
    of Values:</b> &gt; = RetryDelayBase if RetryDelayMultiplier is not 1.0. </p> '
  name: DefaultRetryDelayMaximum
  type: long
  writable: true
- defaultValue:
    value:
      value: 1.0
  descriptionHTML: '<p>The factor used to multiply the previous delay time to calculate
    the next delay time to be used.</p>  <ul> <li> <p>Applies only to agents with
    sending capability.</p> </li>  <li> <p>Updating <code>DefaultRetryDelayMuliplier</code>
    causes connections starting after the update to use the new value.</p> </li> </ul>  <p><b>Range
    of Values:</b> &gt;= 1.</p> '
  name: DefaultRetryDelayMultiplier
  type: double
  writable: true
- defaultValue:
    value:
      value: 0
  descriptionHTML: '<p>The default amount of time, in milliseconds, that the agent
    guarantees to reliably send messages.</p>  <ul> <li> <p>A value of 0 means the
    agent guarantees to reliably send messages for the duration of the conversation.</p>
    </li>  <li> <p>Updating <code>DefaultTimeToLive</code> causes conversations starting
    after the update to use the new value.</p> </li> </ul> '
  name: DefaultTimeToLive
  type: long
  writable: true
- defaultValue:
    value:
      value: true
  deprecated: 'since WebLogic 9.0.1 release '
  descriptionHTML: '<p>Specifies whether a message is logged in the server log file
    when a message fails to be forwarded.</p>  <ul> <li> <p>If selected, this applies
    to messages that fail to be forwarded and delivered to the final destination when
    there is no error handling in a SAF application or the application''s error handling
    fails.</p> </li>  <li> <p>Applies only to agents with receiving capability.</p>
    </li>  <li> <p>Updating <code>LoggingEnabled</code> causes connections starting
    after the update to use the new value.</p> </li> </ul> '
  name: LoggingEnabled
  supported: false
  type: boolean
  writable: true
- defaultValue:
    value:
      value: 2147483647
  descriptionHTML: '<p>The maximum number of bytes allowed in individual messages
    on this SAF agent.</p>  <ul> <li> <p>The message size includes the message body,
    any user-defined properties, and the user-defined JMS header fields: <code>JMSCorrelationID</code>
    and <code>JMSType</code>.</p> </li>  <li> <p>Producers sending messages that exceed
    the configured maximum message size for the SAF agent will receive a <code>ResourceAllocationException</code>.</p>
    </li>  <li> <p>The maximum message size is only enforced for the initial production
    of a message. Messages that are redirected to an error destination or forwarded
    to a member of a distributed destination are not checked for size. For instance,
    if a destination and its corresponding error destination are configured with a
    maximum message size of 128K bytes and 64K bytes, respectively, a message of 96K
    bytes could be redirected to the error destination (even though it exceeds the
    64K byte maximum), but a producer could not directly send the 96K byte message
    to the error destination.</p> </li>  <li> <p>Applies only to agents with sending
    capability.</p> </li>  <li> <p>Updating <code>MaximumMessageSize</code> affects
    only incoming messages; stored messages are not affected.</p> </li> </ul> '
  name: MaximumMessageSize
  type: int
  writable: true
- defaultValue:
    value:
      value: -1
  descriptionHTML: '<p>The amount of memory used to store message bodies in memory
    before they are paged out to disk.</p> <ul> <li> <p>A value of -1 (the default)
    specifies that the server will automatically determine a size based on the maximum
    heap size of the JVM. This default will be set to either one-third the maximum
    heap size, or 512 megabytes, whichever is larger.</p> </li>  <li> <p>The larger
    the buffer, the more memory JMS will consume when many messages are waiting on
    queues or topics. Once the buffer is surpassed, JMS may write message bodies to
    the directory specified by PagingDirectory in an effort to reduce memory usage
    below this buffer.</p> </li>  <li> <p>Surpassing the buffer size does not stop
    the JMS server from accepting new messages. It is still possible to run out of
    memory if messages are arriving faster than they can be written to disk. Users
    with high messaging loads who wish to support the highest possible availability
    should consider setting a quota or setting a threshold and enabling flow control.</p>
    </li>  <li> <p>Applies only to agents with sending capability.</p> </li>  <li>
    <p>Paging is always supported. </p> </li>  <li> <p>Updating the memory size resets
    the message count so that only requests arriving after the update are charged
    against the new memory size.</p> </li> </ul> '
  name: MessageBufferSize
  type: long
  writable: true
- defaultValue:
    value:
      value: -1
  descriptionHTML: '<p>The maximum message quota (total amount of messages) that can
    be stored in this SAF agent.</p>  <ul> <li> <p>The default value of <code>-1</code>
    specifies that the server instance has no limit on the number of messages that
    can be stored. However, excessive message volume can cause memory saturation,
    so this value should correspond to the total amount of available system memory
    relative to the rest of your application load.</p> </li>  <li> <p>Applies only
    to sending agents.</p> </li>  <li> <p>Updating the maximum message quota resets
    the message count so that only requests arriving after the update are charged
    against the new quota.</p> </li> </ul>  <p><b>Range of Values:</b> &gt;= MessagesThresholdHigh</p> '
  name: MessagesMaximum
  type: long
  writable: true
- defaultValue: {
    }
  descriptionHTML: '<p>Optional information that you can include to describe this
    named JMS descriptor bean.</p>  <p>JMS module saves this note in the JMS descriptor
    file as XML PCDATA. All left angle brackets (&lt;) are converted to the XML entity
    <code>&amp;lt;</code>. Carriage returns/line feeds are preserved.</p>  <dl> <dt>Note:</dt>  <dd>
    <p>If you create or edit a note from the Administration Console, the Administration
    Console does not preserve carriage returns/line feeds.</p> </dd> </dl> '
  name: Notes
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: null
  descriptionHTML: '<p> Specifies where message bodies are written when the size of
    the message bodies in the JMS server exceeds the message buffer size. If unspecified,
    messages are written to the <code>tmp</code> directory in the host WebLogic Server
    instance''s directory. For example, <code><em>domainName</em>/servers/<em>servername</em>/tmp</code>.
    </p>  <ul> <li> <p>For best performance, this directory should not be the same
    as the directory used by the SAF agent''s persistent store.</p> </li>  <li> <p>Applies
    only to agents with sending capability.</p> </li> </ul> '
  name: PagingDirectory
  nullable: true
  restartNeeded: true
  type: java.lang.String
  writable: true
- defaultValue:
    value:
      value: 0
  descriptionHTML: '<p>The default amount of time, in milliseconds, that a JMS sending
    agent waits before forwarding messages in a single batch. For a distributed queue
    or topic, the <code>WindowInterval</code> setting is ignored.</p> '
  name: WindowInterval
  type: long
  writable: true
- defaultValue:
    value:
      value: 10
  descriptionHTML: '<p>The default number of messages (batch size) that a sending
    agent waits to forward a message batch until the source destination message count
    is greater than or equal to this value. For a distributed queue or topic, <code>WindowSize</code>
    setting is ignored and always internally set to 1 message.</p>  <p>Updating <code>WindowSize</code>
    causes connections starting after the update to use the new value.</p> '
  name: WindowSize
  type: int
  writable: true
roles:
  allowed:
  - Deployer
