# Copyright (c) 2021, 2024, Oracle Corporation and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
actions:

- name: "start"
  label: "Start servicing all requests"
  successMessage: Started and created task for application {0}
  failureMessage: Failed to start application {0}, check deployment task for more information
  # poll once since this operation is synchronous and affects what's displayed on the page
  polling:
    reloadSeconds: 1
    maxAttempts: 1

- name: "startInAdminMode"
  label: "Start servicing only administration requests"
  actionMethod: weblogic.remoteconsole.customizers.AppDeploymentRuntimeMBeanCustomizer.startInAdminMode
  successMessage: Created task to start application {0} for administration requests
  failureMessage: Failed to start application {0}, check deployment task for more information
  mbeanOperation:
    operation: start_targets_deploymentOptions
  helpHTML: >
    <p>Start this application in admin mode on all running servers to which it is deployed.
    This is an asynchronous operation that returns immediately.
    The returned DeploymentProgressObjectMBean can be used to determine when the operation is completed.</p>
  # poll multiple times since this operation is asynchronous and affects what's displayed on the page
  polling:
    reloadSeconds: 2
    maxAttempts: 5
  definition:
    type: "weblogic.management.runtime.DeploymentProgressObjectMBean"

- name: "stop"
  label: "Stop when work completes"
  successMessage: Stopped and created task for application {0}
  failureMessage: Failed to stop application {0}, check deployment task for more information
  # poll once since this operation is synchronous and affects what's displayed on the page
  polling:
    reloadSeconds: 1
    maxAttempts: 1

- name: "forceStop"
  label: "Force stop now"
  actionMethod: weblogic.remoteconsole.customizers.AppDeploymentRuntimeMBeanCustomizer.forceStop
  successMessage: Created task to stop application {0} immediately
  failureMessage: Failed to stop application {0}, check deployment task for more information
  mbeanOperation:
    operation: stop_targets_deploymentOptions
  # poll multiple times since this operation is asynchronous and affects what's displayed on the page
  polling:
    reloadSeconds: 1
    maxAttempts: 5
  helpHTML: >
    <p>Forcibly stop this application on all running servers to which it is deployed.
    This is an asynchronous operation that returns immediately.
    The returned DeploymentProgressObjectMBean can be used to determine when the operation is completed.</p>
  definition:
    type: "weblogic.management.runtime.DeploymentProgressObjectMBean"

- name: "stopToAdminMode"
  label: "Stop servicing non-administration requests"
  actionMethod: weblogic.remoteconsole.customizers.AppDeploymentRuntimeMBeanCustomizer.stopToAdminMode
  successMessage: Created task to stop non-administration requests for application {0}
  failureMessage: Failed to stop non-administration requests for application {0}, check deployment task for more information
  mbeanOperation:
    operation: stop_targets_deploymentOptions
  # poll multiple times since this operation is asynchronous and affects what's displayed on the page
  polling:
    reloadSeconds: 2
    maxAttempts: 5
  helpHTML: >
    <p>Gracefully stop this application to admin mode on all running servers to which it is deployed.
    This is an asynchronous operation that returns immediately.
    The returned DeploymentProgressObjectMBean can be used to determine when the operation is completed.</p>
  definition:
    type: "weblogic.management.runtime.DeploymentProgressObjectMBean"

- name: "createPlan"
  label: "Create Plan"
  successMessage: Created deployment plan and task to redeploy application {0}
  failureMessage: Failed to create deployment plan for application {0}, check deployment task for more information
  disableMBeanJavadoc: true
  # Don't specify polling since what's displayed on the page doesn't change when update completes
  # temporary workaround for the CFE using the action's pageSummaryHTML as the
  # action input form's introductionHTML
  helpHTML: >
    <p>The deployment plan file name must have a <code>.xml</code> file extension, and should be located
    in its own directory to avoid it being inadvertently shared with other applications.</p>
    <p><code>Plan.xml</code> is the highly recommended name for the file.</p>
    <p><i>The plan file will be overwritten if it already exists.  Other files located in its directory may be overwritten too.</i></p>
    <p>Note: if your new deployment plan isn't visible in the WebLogic Remote Console, go to the 'Edit' view
    and see if the shopping cart has changes that need to be committed.</p>
  inputForm:
    customizePageMethod: weblogic.remoteconsole.customizers.AppDeploymentRuntimeMBeanCustomizer.customizeCreatePlanActionInputForm
    introductionHTML: >
      <p>The deployment plan file name must have a <code>.xml</code> file extension, and should be located
      in its own directory to avoid it being inadvertently shared with other applications.
      The plan file location must be under domain home</p>
      <p><code>Plan.xml</code> is the highly recommended name for the file.</p>
      <p><i>The plan file will be overwritten if it already exists.  Other files located in its directory may be overwritten too.</i></p>
      <p>Note: if your new deployment plan isn't visible in the WebLogic Remote Console, go to the 'Edit' view
      and see if the shopping cart has changes that need to be committed.</p>
    parameters:
    - name: "PlanPath"
      required: true

- name: "update"
  label: "Update Deployment Plan"
  successMessage: Created task to update deployment plan for application {0}
  failureMessage: Failed to update deployment plan for application {0}, check deployment task for more information
  disableMBeanJavadoc: true
  # Don't specify polling since what's displayed on the page doesn't change when update completes
  actionMethod: weblogic.remoteconsole.customizers.AppDeploymentRuntimeMBeanCustomizer.updatePlanOnServer
  helpHTML: >
    <p>Allows for updating an application configuration using an changed
    deployment plan.</p>
    <p>A configuration update is equivalent to replacing the application's
    deployment plan. The deployment plan is redeployed in-place. A new
    version of the application is not started, even if the new deployment
    plan has a different version.</p>
    <p>The update succeeds only if changes to the deployment plan do not
    require the application to be restarted. Configuration changes in 
    the new deployment plan must be limited to
    tuning the application. Changes to resource bindings causes
    the update to fail. Use redeploy()
    to apply resource binding changes to a production application.</p>
    <p>This method targets only root modules. Module level targeting is 
    not supported.</p>
  inputForm:
    customizePageMethod: weblogic.remoteconsole.customizers.AppDeploymentRuntimeMBeanCustomizer.customizeUpdatePlanActionInputForm
    introductionHTML: >
      <p>Use this page to update the application with a new or modified deployment plan.</p>
      <p>You can specify a different deployment plan which is located on the admin server's file system.  The status of the update
        will be available at the Deployment Progress Objects tree node. </p>
    parameters:
      - name: "PlanPath"
        required: true

- name: "redeploy"
  label: "Redeploy Application"
  actionMethod: weblogic.remoteconsole.customizers.AppDeploymentRuntimeMBeanCustomizer.redeploySourceOnServer
  successMessage: Created task to redeploy application {0}
  failureMessage: Failed to redeploy application {0}, check deployment task for more information
  disableMBeanJavadoc: true
  # Don't specify polling since what's displayed on the page doesn't change when redeploy completes
  helpHTML: >
    <p> Redeploy the application with new bits with new or modified deployment plan.  
    Both the application and deployment plan must be on the server machine.</p>
  inputForm:
    customizePageMethod: weblogic.remoteconsole.customizers.AppDeploymentRuntimeMBeanCustomizer.customizeRedeployActionInputForm
    introductionHTML: >
      <p>Use this page to redeploy the application with a new or modified deployment plan.</p>
      <p>You can specify a different location for the application or a different deployment plan. Both must be located 
      on the administration server's file system.</p>
      <p>If the plan path is not specified, the application will be redeployed without a deployment plan. </p>
    parameters:
      - name: "SourcePath"
        required: true
      - name: "PlanPath"

- name: uploadAndRedeploy
  label: "Upload and Redeploy Application"
  successMessage: Uploaded and created task to redeploy application {0}
  failureMessage: Failed to upload and redeploy application {0}, check deployment task for more information
  disableMBeanJavadoc: true
  # Don't specify polling since what's displayed on the page doesn't change when redeploy completes
  helpHTML: >
    <p>Use this page to redeploy the application with a new or modified deployment plan.</p>
    <p>The selected source and plan will be uploaded to the server machine, under the administration server's upload directory.</p>
    <p>If the original source or plan is not under administration server's upload directory, a new directory will be 
    created and the files will be upload there. The original archive or plan, which is outside the upload directory, will not be deleted.</p>
    <p>If the plan is not selected, the application will be redeployed without a deployment plan. </p>
  inputForm:
    introductionHTML: >
      <p>Use this page to redeploy the application with a new or modified deployment plan.</p>
      <p>The selected source and plan will be uploaded to the server machine, under the administration server's upload directory.</p>
      <p>If the original source or plan is not under administration server's upload directory, a new directory will be 
      created and the files will be upload there. The original archive or plan, which is outside the upload directory, will not be deleted.</p>
      <p>If the plan is not selected, the application will be redeployed without a deployment plan. </p>
    parameters:
    - name: Source
      required: true
      onlineName: source
    - name: Plan
      onlineName: plan

- name: uploadAndUpdate
  label: "Upload and Update the Deployment Plan."
  successMessage: Uploaded and created task to update deployment plan for application {0}
  failureMessage: Failed to upload and update deployment plan for application {0}, check deployment task for more information
  # Don't specify polling since what's displayed on the page doesn't change when update completes
  disableMBeanJavadoc: true
  helpHTML: >
    <p>Use this page to update the deployment plan of the application.</p>
    <p>The selected plan file will be uploaded to the server machine, under the administration server's upload directory.</p>
    <p>If the Plan was not under administration server's upload directory, a new directory will be created and the files will be upload there. 
    The original plan, which is outside the upload directory, will not be deleted.</p>
  inputForm:
    introductionHTML: >
      <p>Use this page to update the deployment plan of the application.</p>
      <p>The selected plan file will be uploaded to the server machine, under the administration server's upload directory.</p>
      <p>If the Plan was not under administration server's upload directory, a new directory will be created and the files will be upload there. 
      The original plan, which is outside the upload directory, will not be deleted.</p>
    parameters:
      - name: Plan
        required: true
        onlineName: plan

children:
- name: Configuration
  requiredCapabilities:
  - DeploymentConfiguration
- name: State
  requiredCapabilities:
  - DeploymentState
- name: StateV2
  requiredCapabilities:
  - DeploymentStateV2
