# Copyright (c) 2022, 2023, Oracle Corporation and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

instanceName: ServerRuntime
disableMBeanJavadoc: true

createResourceMethod: weblogic.remoteconsole.customizers.CombinedServerRuntimeMBeanCustomizer.createResource

subTypeDiscriminatorProperty: Type
subTypes:
- type: weblogic.management.runtime.RunningServerRuntimeMBean
  value: RunningServerRuntime
- type: weblogic.management.runtime.NotRunningServerRuntimeMBean
  value: NotRunningServerRuntime

properties:
- name: State
  legalValues:
  - value: ACTIVATE_LATER
    label: Activate later
  - value: ADMIN
    label: Admin
  - value: DISCOVERED
    label: Discovered
  - value: FAILED
    label: Failed
  - value: FAILED_MIGRATABLE
    label: Failed, migratable
  - value: FAILED_NOT_RESTARTABLE
    label: Failed, not restartable
  - value: FAILED_RESTARTING
    label: Failed, restarting
  - value: FORCE_SHUTTING_DOWN
    label: Force shutting down
  - value: FORCE_SUSPENDING
    label: Force suspending
  - value: RESTART_REQUIRED
    label: Restart required
  - value: RESUMING
    label: Resuming
  - value: RUNNING
    label: Running
  - value: SHUTDOWN
    label: Shutdown
  - value: SHUTDOWN_IN_PROCESS
    label: Shutdown in progress
  - value: SHUTDOWN_PENDING
    label: Shutdown pending
  - value: SHUTTING_DOWN
    label: Shutting down
  - value: STANDBY
    label: Standby
  - value: STARTING
    label: Starting
  - value: SUSPENDING
    label: Suspending
  - value: UNKNOWN
    label: Unknown
  - value: NOT_RUNNING
    label: Not running, select this row for more info

actions:

- name: "start"
  label: "Start"
  actionMethod: weblogic.remoteconsole.customizers.CombinedServerRuntimeMBeanCustomizer.start
  polling:
    # typically starting a server takes a while
    reloadSeconds: 10
    maxAttempts: 10
  definition:
    type: "weblogic.management.runtime.ServerLifeCycleTaskRuntimeMBean"
    descriptionHTML: >
      <p>Uses the Node Manager to start a Managed Server.</p>
  mbeanOperation:
    type: ServerLifeCycleRuntimeMBean
    operation: start
- name: "resume"
  label: "Resume"
  actionMethod: weblogic.remoteconsole.customizers.CombinedServerRuntimeMBeanCustomizer.resume
  polling:
    # typically resuming a server is very fast
    reloadSeconds: 5
    maxAttempts: 10
  definition:
    type: "weblogic.management.runtime.ServerLifeCycleTaskRuntimeMBean"
    descriptionHTML: >
      <p>Transitions the server from <code>ADMIN</code> to <code>RUNNING</code> state.</p>
  mbeanOperation:
    type: ServerLifeCycleRuntimeMBean
    operation: resume

- name: "suspend"
  label: "Suspend when work completes"
  actionMethod: weblogic.remoteconsole.customizers.CombinedServerRuntimeMBeanCustomizer.suspend
  polling:
    # typically gracefully suspending a server is fast if there isn't much in-progress work
    reloadSeconds: 5
    maxAttempts: 20
  definition:
    type: "weblogic.management.runtime.ServerLifeCycleTaskRuntimeMBean"
    descriptionHTML: >
      <p>Gracefully suspends server to <code>ADMIN</code> state.
      New requests are rejected and inflight work is allowed to complete.</p> 
  mbeanOperation:
    type: ServerLifeCycleRuntimeMBean
    operation: suspend

- name: "forceSuspend"
  label: "Force suspend now"
  actionMethod: weblogic.remoteconsole.customizers.CombinedServerRuntimeMBeanCustomizer.forceSuspend
  polling:
    # typically force suspending a server is fast
    reloadSeconds: 5
    maxAttempts: 10
  definition:
    type: "weblogic.management.runtime.ServerLifeCycleTaskRuntimeMBean"
    descriptionHTML: >
      <p>Transitions the server from RUNNING to ADMIN state forcefully cancelling inflight work.</p>
      <p>Work that cannot be cancelled is dropped.
      Applications are brought into the admin mode forcefully.</p>
  mbeanOperation:
    type: ServerLifeCycleRuntimeMBean
    operation: forceSuspend

- name: "gracefulShutdown"
  label: "Shutdown when work completes"
  actionMethod: weblogic.remoteconsole.customizers.CombinedServerRuntimeMBeanCustomizer.shutdown
  polling:
    # typically gracefully shutting down a server is relatively fast if there isn't much in-progress work
    reloadSeconds: 5
    maxAttempts: 20
  definition:
    type: "weblogic.management.runtime.ServerLifeCycleTaskRuntimeMBean"
    descriptionHTML: >
      <p>Gracefully transitions a server to the <code>SHUTDOWN</code> state.
      The server completes all current work before it shuts down.</p>
      <p>This method is the same as calling:</p>
      <p><code>shutdown(timeout, ignoreSessions, false);</code></p>
  mbeanOperation:
    type: ServerLifeCycleRuntimeMBean
    operation: shutdown_timeout_ignoreSessions

- name: "forceShutdown"
  label: "Force shutdown now"
  actionMethod: weblogic.remoteconsole.customizers.CombinedServerRuntimeMBeanCustomizer.forceShutdown
  polling:
    # typically force shutting down a server is relatively fast
    reloadSeconds: 5
    maxAttempts: 10
  definition:
    type: "weblogic.management.runtime.ServerLifeCycleTaskRuntimeMBean"
    descriptionHTML: >
      <p>Immediately transitions a server to the <code>SHUTDOWN</code> state.
      The server immediately terminates all current work,
      moves through the <code>SHUTTING_DOWN</code> state,
      and ends in the <code>SHUTDOWN</code> state.</p>
      <p>You can forcefully shut down a server from any state except <code>UNKNOWN</code>.</p>
  mbeanOperation:
    type: ServerLifeCycleRuntimeMBean
    operation: forceShutdown

- name: "restartSSL"
  label: "Restart SSL"
  actionMethod: weblogic.remoteconsole.customizers.CombinedServerRuntimeMBeanCustomizer.restartSSL
  # don't configure polling since this action is synchronous
  definition:
    type: "void"
    descriptionHTML: >
      <p>Restart all SSL channels on which the server is listening.
      This could be necessary because of some change that the server is not aware of,
      for instance updates to the keystore.</p>
    # If we don't customize restartSSL's roles, it will inherit CombinedServerRuntimeMBean's
    # roles which would allow Operator and Admin.
    # However, restartSSL delegates to ServerRunimeMBean.restartSSLChannels which can only be accessed by Admin.
    # So, customize restartSSL's roles to only allow Admin.
    roles:
      allowed:
      - Admin
  mbeanOperation:
    type: ServerRuntimeMBean
    operation: restartSSLChannels
